/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.batalhas;

import algoritmos.batalhas.AlgoritmoPrincipal;
import algoritmos.trainer.AlgoritmoPrincipalTrainer;
import algoritmos.trainer.CalculadoraTrainer;
import ficha_personagem.Ficha;
import ficha_personagem.TreinoPosBatalha;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.trainer.View_distribuir;

/**
 *
 * @author 422UR4H
 */
public class ViewTreinos extends javax.swing.JFrame {

    /**
     * Creates new form ViewTreinos
     */
    public ViewTreinos() {
        initComponents();
        
        
        // MEU CODIGO
        
        Ficha ficha = AlgoritmoPrincipal.getFicha();
        TreinoPosBatalha tpb = AlgoritmoPrincipal.getTpb(ficha.getNick());
        jLabelNome.setText(ficha.getNick());
        
        atualizarCampos();
        
        // desabilitando jButtons
        jButtonTreinarPer.setEnabled(false);
        jButtonZts.setEnabled(false);
        jButtonEn.setEnabled(false);
        
        // habilitando jButtons
        jButtonRef.setEnabled(tpb.isRef());
        jButtonEms.setEnabled(tpb.isEms());
        jButtonMan.setEnabled(tpb.isMan());
        jButtonMat.setEnabled(tpb.isMat());
        jButtonTrs.setEnabled(tpb.isTrs());
        jButtonEsp.setEnabled(tpb.isEsp());
        jButtonCdn.setEnabled(tpb.isCdn());
        jButtonTen.setEnabled(tpb.isTen());
        jButtonAop.setEnabled(tpb.isAop());
        jButtonMop.setEnabled(tpb.isMop());
        jButtonRyu.setEnabled(tpb.isRyu());
        
        // setando valor padrão de exp bonus
        jTextFieldExpBonus.setText(String.valueOf(AlgoritmoPrincipal.getPerson(jLabelNome.getText()).getExpBonus()));
        
        // FIM DO MEU CODIGO
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldExpBonus = new javax.swing.JTextField();
        jLabelLvl = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabelLvlNen = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldSomarExp = new javax.swing.JTextField();
        jButtonAplicarExp = new javax.swing.JButton();
        jProgressBarLvl = new javax.swing.JProgressBar();
        jProgressBarNen = new javax.swing.JProgressBar();
        jButtonTreinarPer = new javax.swing.JButton();
        jButtonTreinarPro = new javax.swing.JButton();
        jButtonTreinarHabilidade = new javax.swing.JButton();
        jLabelNome = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jButtonRef = new javax.swing.JButton();
        jLabelRef = new javax.swing.JLabel();
        jButtonEms = new javax.swing.JButton();
        jLabelEms = new javax.swing.JLabel();
        jButtonMat = new javax.swing.JButton();
        jLabelMat = new javax.swing.JLabel();
        jButtonMan = new javax.swing.JButton();
        jLabelMan = new javax.swing.JLabel();
        jButtonTrs = new javax.swing.JButton();
        jLabelTrs = new javax.swing.JLabel();
        jButtonEsp = new javax.swing.JButton();
        jLabelEsp = new javax.swing.JLabel();
        jButtonCdn = new javax.swing.JButton();
        jLabelCdn = new javax.swing.JLabel();
        jProgressBarRef = new javax.swing.JProgressBar();
        jProgressBarEms = new javax.swing.JProgressBar();
        jProgressBarMat = new javax.swing.JProgressBar();
        jProgressBarMan = new javax.swing.JProgressBar();
        jProgressBarTrs = new javax.swing.JProgressBar();
        jProgressBarEsp = new javax.swing.JProgressBar();
        jProgressBarCdn = new javax.swing.JProgressBar();
        jButtonSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jButtonTen = new javax.swing.JButton();
        jLabelTen = new javax.swing.JLabel();
        jButtonRyu = new javax.swing.JButton();
        jLabelRyu = new javax.swing.JLabel();
        jButtonEn = new javax.swing.JButton();
        jLabelEn = new javax.swing.JLabel();
        jButtonAop = new javax.swing.JButton();
        jLabelAop = new javax.swing.JLabel();
        jButtonMop = new javax.swing.JButton();
        jLabelMop = new javax.swing.JLabel();
        jButtonZts = new javax.swing.JButton();
        jLabelZts = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jProgressBarTen = new javax.swing.JProgressBar();
        jProgressBarRyu = new javax.swing.JProgressBar();
        jProgressBarEn = new javax.swing.JProgressBar();
        jProgressBarAop = new javax.swing.JProgressBar();
        jProgressBarMop = new javax.swing.JProgressBar();
        jProgressBarZts = new javax.swing.JProgressBar();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Treino Pós Batalha");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Formulário do personagem");

        jLabel2.setBackground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Nome: ");

        jLabel10.setBackground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Level: ");

        jLabel12.setBackground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Exp Bônus: ");

        jTextFieldExpBonus.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldExpBonus.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldExpBonus.setText("0");
        jTextFieldExpBonus.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldExpBonus.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldExpBonus.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldExpBonus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldExpBonusFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldExpBonusFocusLost(evt);
            }
        });
        jTextFieldExpBonus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextFieldExpBonusMouseEntered(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Nen: ");

        jLabel16.setBackground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Somar Exp:");

        jTextFieldSomarExp.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldSomarExp.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldSomarExp.setText("0");
        jTextFieldSomarExp.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldSomarExp.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldSomarExp.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldSomarExp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSomarExpFocusGained(evt);
            }
        });

        jButtonAplicarExp.setBackground(new java.awt.Color(102, 102, 102));
        jButtonAplicarExp.setText("Aplicar Experiência");
        jButtonAplicarExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAplicarExpActionPerformed(evt);
            }
        });

        jProgressBarLvl.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarLvl.setForeground(new java.awt.Color(255, 0, 0));
        jProgressBarLvl.setString("");
        jProgressBarLvl.setStringPainted(true);
        jProgressBarLvl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarLvlMouseEntered(evt);
            }
        });

        jProgressBarNen.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarNen.setForeground(new java.awt.Color(255, 0, 0));
        jProgressBarNen.setString("");
        jProgressBarNen.setStringPainted(true);
        jProgressBarNen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarNenMouseEntered(evt);
            }
        });

        jButtonTreinarPer.setBackground(new java.awt.Color(102, 102, 102));
        jButtonTreinarPer.setText("Treinar Perícias");
        jButtonTreinarPer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonTreinarPerFocusGained(evt);
            }
        });
        jButtonTreinarPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTreinarPerActionPerformed(evt);
            }
        });

        jButtonTreinarPro.setBackground(new java.awt.Color(102, 102, 102));
        jButtonTreinarPro.setText("Treinar Proficiências");
        jButtonTreinarPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonTreinarProFocusGained(evt);
            }
        });
        jButtonTreinarPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTreinarProActionPerformed(evt);
            }
        });

        jButtonTreinarHabilidade.setBackground(new java.awt.Color(102, 102, 102));
        jButtonTreinarHabilidade.setText("Treinar Habilidades");
        jButtonTreinarHabilidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonTreinarHabilidadeFocusGained(evt);
            }
        });
        jButtonTreinarHabilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTreinarHabilidadeActionPerformed(evt);
            }
        });

        jLabelNome.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldExpBonus))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLvlNen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))
                    .addComponent(jButtonAplicarExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSomarExp))
                    .addComponent(jProgressBarLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarNen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButtonTreinarPer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonTreinarPro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonTreinarHabilidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldExpBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSomarExp, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jButtonAplicarExp)
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jProgressBarLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLvlNen, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jProgressBarNen, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonTreinarPer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButtonTreinarPro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButtonTreinarHabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        jLabel20.setBackground(new java.awt.Color(102, 102, 102));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Atributos de Nen");

        jLabel21.setBackground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Ref: ");

        jLabel22.setBackground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Ems: ");

        jLabel23.setBackground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Mat: ");

        jLabel24.setBackground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Man: ");

        jLabel25.setBackground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Trs: ");

        jLabel26.setBackground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("Esp: ");

        jLabel27.setBackground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("Cdn: ");

        jButtonRef.setBackground(new java.awt.Color(102, 102, 102));
        jButtonRef.setText("Treinar");
        jButtonRef.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonRefFocusGained(evt);
            }
        });
        jButtonRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefActionPerformed(evt);
            }
        });

        jButtonEms.setBackground(new java.awt.Color(102, 102, 102));
        jButtonEms.setText("Treinar");
        jButtonEms.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonEmsFocusGained(evt);
            }
        });
        jButtonEms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmsActionPerformed(evt);
            }
        });

        jButtonMat.setBackground(new java.awt.Color(102, 102, 102));
        jButtonMat.setText("Treinar");
        jButtonMat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonMatFocusGained(evt);
            }
        });
        jButtonMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMatActionPerformed(evt);
            }
        });

        jButtonMan.setBackground(new java.awt.Color(102, 102, 102));
        jButtonMan.setText("Treinar");
        jButtonMan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonManFocusGained(evt);
            }
        });
        jButtonMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonManActionPerformed(evt);
            }
        });

        jButtonTrs.setBackground(new java.awt.Color(102, 102, 102));
        jButtonTrs.setText("Treinar");
        jButtonTrs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonTrsFocusGained(evt);
            }
        });
        jButtonTrs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTrsActionPerformed(evt);
            }
        });

        jButtonEsp.setBackground(new java.awt.Color(102, 102, 102));
        jButtonEsp.setText("Treinar");
        jButtonEsp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonEspFocusGained(evt);
            }
        });
        jButtonEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEspActionPerformed(evt);
            }
        });

        jButtonCdn.setBackground(new java.awt.Color(102, 102, 102));
        jButtonCdn.setText("Treinar");
        jButtonCdn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonCdnFocusGained(evt);
            }
        });
        jButtonCdn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCdnActionPerformed(evt);
            }
        });

        jProgressBarRef.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarRef.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarRef.setString("");
        jProgressBarRef.setStringPainted(true);
        jProgressBarRef.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarRefMouseEntered(evt);
            }
        });

        jProgressBarEms.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarEms.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarEms.setString("");
        jProgressBarEms.setStringPainted(true);
        jProgressBarEms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarEmsMouseEntered(evt);
            }
        });

        jProgressBarMat.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarMat.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarMat.setString("");
        jProgressBarMat.setStringPainted(true);
        jProgressBarMat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarMatMouseEntered(evt);
            }
        });

        jProgressBarMan.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarMan.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarMan.setString("");
        jProgressBarMan.setStringPainted(true);
        jProgressBarMan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarManMouseEntered(evt);
            }
        });

        jProgressBarTrs.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarTrs.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarTrs.setString("");
        jProgressBarTrs.setStringPainted(true);
        jProgressBarTrs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarTrsMouseEntered(evt);
            }
        });

        jProgressBarEsp.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarEsp.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarEsp.setString("");
        jProgressBarEsp.setStringPainted(true);
        jProgressBarEsp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarEspMouseEntered(evt);
            }
        });

        jProgressBarCdn.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarCdn.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarCdn.setString("");
        jProgressBarCdn.setStringPainted(true);
        jProgressBarCdn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarCdnMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBarRef, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelRef, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelEms, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonEms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonRef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabelMat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabelMan, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabelTrs, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonTrs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabelEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabelCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCdn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jProgressBarEms, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarMat, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarMan, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarTrs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRef, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelRef, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarRef, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelEms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEms, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarEms, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarMat, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMan, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMan, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarMan, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTrs, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTrs, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarTrs, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jProgressBarCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonSalvar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonSalvar.setText("Salvar Alterações");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));

        jLabel33.setBackground(new java.awt.Color(102, 102, 102));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Atributos de Nen");

        jLabel45.setBackground(new java.awt.Color(102, 102, 102));
        jLabel45.setText("Ten: ");

        jLabel46.setBackground(new java.awt.Color(102, 102, 102));
        jLabel46.setText("Ryu: ");

        jLabel48.setText("En: ");

        jLabel49.setText("Aop: ");

        jLabel54.setText("Mop: ");

        jButtonTen.setBackground(new java.awt.Color(102, 102, 102));
        jButtonTen.setText("Treinar");
        jButtonTen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonTenFocusGained(evt);
            }
        });
        jButtonTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTenActionPerformed(evt);
            }
        });

        jButtonRyu.setBackground(new java.awt.Color(102, 102, 102));
        jButtonRyu.setText("Treinar");
        jButtonRyu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonRyuFocusGained(evt);
            }
        });
        jButtonRyu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRyuActionPerformed(evt);
            }
        });

        jButtonEn.setBackground(new java.awt.Color(102, 102, 102));
        jButtonEn.setText("Treinar");
        jButtonEn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonEnFocusGained(evt);
            }
        });
        jButtonEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnActionPerformed(evt);
            }
        });

        jButtonAop.setBackground(new java.awt.Color(102, 102, 102));
        jButtonAop.setText("Treinar");
        jButtonAop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonAopFocusGained(evt);
            }
        });
        jButtonAop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAopActionPerformed(evt);
            }
        });

        jButtonMop.setBackground(new java.awt.Color(102, 102, 102));
        jButtonMop.setText("Treinar");
        jButtonMop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonMopFocusGained(evt);
            }
        });
        jButtonMop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMopActionPerformed(evt);
            }
        });

        jButtonZts.setBackground(new java.awt.Color(102, 102, 102));
        jButtonZts.setText("Treinar");
        jButtonZts.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonZtsFocusGained(evt);
            }
        });
        jButtonZts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZtsActionPerformed(evt);
            }
        });

        jLabel55.setText("Zts: ");

        jProgressBarTen.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarTen.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarTen.setString("");
        jProgressBarTen.setStringPainted(true);
        jProgressBarTen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarTenMouseEntered(evt);
            }
        });

        jProgressBarRyu.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarRyu.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarRyu.setString("");
        jProgressBarRyu.setStringPainted(true);
        jProgressBarRyu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarRyuMouseEntered(evt);
            }
        });

        jProgressBarEn.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarEn.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarEn.setString("");
        jProgressBarEn.setStringPainted(true);
        jProgressBarEn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarEnMouseEntered(evt);
            }
        });

        jProgressBarAop.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarAop.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarAop.setString("");
        jProgressBarAop.setStringPainted(true);
        jProgressBarAop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarAopMouseEntered(evt);
            }
        });

        jProgressBarMop.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarMop.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarMop.setString("");
        jProgressBarMop.setStringPainted(true);
        jProgressBarMop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarMopMouseEntered(evt);
            }
        });

        jProgressBarZts.setBackground(new java.awt.Color(102, 102, 102));
        jProgressBarZts.setForeground(new java.awt.Color(0, 255, 0));
        jProgressBarZts.setString("");
        jProgressBarZts.setStringPainted(true);
        jProgressBarZts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProgressBarZtsMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabelTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonTen))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabelRyu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRyu))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabelEn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEn))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabelZts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonZts, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jProgressBarTen, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarRyu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarEn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAop, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAop))
                    .addComponent(jProgressBarAop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMop, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonMop))
                    .addComponent(jProgressBarMop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jProgressBarZts, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTen, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTen, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarTen, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRyu, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRyu, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarRyu, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarEn, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAop, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAop, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarAop, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMop, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMop, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarMop, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonZts, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelZts, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBarZts, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu3.setText("Treinar");

        jMenuItem1.setText("Perícias");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem3.setText("Zetsu");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem2.setText("En");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Curar");

        jMenuItem4.setText("Hp");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem6.setText("Mop");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldExpBonusFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldExpBonusFocusGained
        jTextFieldExpBonus.selectAll();
    }//GEN-LAST:event_jTextFieldExpBonusFocusGained

    private boolean validarValor(String valor) {
        try {
            if (Integer.parseInt(valor) < 0) {
                return false;
            }
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Entre com um valor inteiro válido",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            
            return false;
        }
    }
    
    private void jTextFieldExpBonusFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldExpBonusFocusLost
        if (!validarValor(jTextFieldExpBonus.getText())) {
            return;
        }
        int expBonus = Integer.parseInt(jTextFieldExpBonus.getText());
        
        AlgoritmoPrincipal.getPerson(jLabelNome.getText()).setExpBonus(expBonus);
    }//GEN-LAST:event_jTextFieldExpBonusFocusLost

    private void jTextFieldExpBonusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldExpBonusMouseEntered
        jTextFieldExpBonus.setToolTipText("Porcentagem bonus de exp para o treino e para aplicar exp (abaixo)");
    }//GEN-LAST:event_jTextFieldExpBonusMouseEntered

    private void jTextFieldSomarExpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSomarExpFocusGained
        jTextFieldSomarExp.selectAll();
    }//GEN-LAST:event_jTextFieldSomarExpFocusGained

    private void jButtonAplicarExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAplicarExpActionPerformed
        if (!validarValor(jTextFieldSomarExp.getText())) {
            jTextFieldExpBonus.selectAll();
            return;
        }
        if (!validarValor(jTextFieldSomarExp.getText())) {
            jTextFieldExpBonus.selectAll();
            return;
        }
        int exp = Integer.parseInt(jTextFieldSomarExp.getText());
        
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(jLabelNome.getText()));
        Ficha personagem = AlgoritmoPrincipal.getFicha();
        
        personagem.setExpBonus(Integer.parseInt(jTextFieldExpBonus.getText()));

        // inserindo exp na ficha
        // testando se o personagem upou (o metodo retorna true, caso positivo)
        if (CalculadoraTrainer.putExpFicha(exp, personagem)) {
            // se o personagem tiver upado...
            AlgoritmoPrincipalTrainer.setFicha(personagem);
            new View_distribuir(null, true).setVisible(true);
        }

        // atualizando formulário
        jLabelLvl.setText(String.valueOf(personagem.getLvl()));
        jLabelLvlNen.setText(String.valueOf(personagem.getLvlNen()));
        jProgressBarLvl.setMaximum(AlgoritmoPrincipal.getEXP_LVL(personagem.getLvl() + 1));
        jProgressBarLvl.setValue(personagem.getExp());

        // limpando jTextField
        jTextFieldSomarExp.setText("0");
    }//GEN-LAST:event_jButtonAplicarExpActionPerformed

    private void jProgressBarLvlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarLvlMouseEntered
        jProgressBarLvl.setToolTipText(jProgressBarLvl.getValue()+"/"+jProgressBarLvl.getMaximum());
    }//GEN-LAST:event_jProgressBarLvlMouseEntered

    private void jProgressBarNenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarNenMouseEntered
        jProgressBarNen.setToolTipText(jProgressBarNen.getValue()+"/"+jProgressBarNen.getMaximum());
    }//GEN-LAST:event_jProgressBarNenMouseEntered

    private void atualizarCampos() {
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(jLabelNome.getText()));
        Ficha ficha = AlgoritmoPrincipal.getFicha();
        
        // setando Formulário do personagem
        jLabelLvl.setText(String.valueOf(ficha.getLvl()));
        jLabelLvlNen.setText(String.valueOf(ficha.getLvlNen()));
        jTextFieldExpBonus.setText(String.valueOf(ficha.getExpBonus()));
        
        // setando atributos de nen
        jLabelRef.setText(String.valueOf(ficha.getAtrRef()));
        jLabelEms.setText(String.valueOf(ficha.getAtrEms()));
        jLabelMat.setText(String.valueOf(ficha.getAtrMat()));
        jLabelMan.setText(String.valueOf(ficha.getAtrMan()));
        jLabelTrs.setText(String.valueOf(ficha.getAtrTrs()));
        jLabelEsp.setText(String.valueOf(ficha.getAtrEsp()));
        jLabelCdn.setText(String.valueOf(ficha.getAtrCdn()));
        jLabelTen.setText(String.valueOf(ficha.getTen()));
        jLabelRyu.setText(String.valueOf(ficha.getRyu()));
        jLabelAop.setText(String.valueOf(ficha.getAop()));
        jLabelMop.setText(String.valueOf(ficha.getMop()));
        jLabelZts.setText(String.valueOf(ficha.getZts()));
        jLabelEn.setText(String.valueOf(ficha.getEn()));
        
        // setando jProgressBar
        // valores maximos
        jProgressBarLvl.setMaximum(AlgoritmoPrincipal.getEXP_LVL(ficha.getLvl() + 1));
        jProgressBarNen.setMaximum(AlgoritmoPrincipal.getLVL_NEN(ficha.getLvlNen() + 1));
        
        jProgressBarRef.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrRef() + 1));
        jProgressBarEms.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrEms() + 1));
        jProgressBarMan.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrMan() + 1));
        jProgressBarMat.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrMat() + 1));
        jProgressBarTrs.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrTrs() + 1));
        jProgressBarEsp.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrEsp() + 1));
        jProgressBarCdn.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAtrCdn() + 1));
        jProgressBarTen.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getTen() + 1));
        jProgressBarRyu.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getRyu() + 1));
        jProgressBarAop.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getAop() + 1));
        jProgressBarZts.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getZts() + 1));
        jProgressBarEn.setMaximum(AlgoritmoPrincipal.getEXP_NEN(ficha.getEn() + 1));
        jProgressBarMop.setMaximum(CalculadoraTrainer.getExpMop(ficha.getMop() + 1));
        
        // valores atuais
        jProgressBarLvl.setValue(ficha.getExp());
        jProgressBarNen.setValue(ficha.getExpNen());
        
        jProgressBarRef.setValue(ficha.getAtr().get("REF").getExp());
        jProgressBarEms.setValue(ficha.getAtr().get("EMS").getExp());
        jProgressBarMan.setValue(ficha.getAtr().get("MAN").getExp());
        jProgressBarMat.setValue(ficha.getAtr().get("MAT").getExp());
        jProgressBarTrs.setValue(ficha.getAtr().get("TRS").getExp());
        jProgressBarEsp.setValue(ficha.getAtr().get("ESP").getExp());
        jProgressBarCdn.setValue(ficha.getAtr().get("CDN").getExp());
        jProgressBarTen.setValue(ficha.getAtr().get("TEN").getExp());
        jProgressBarRyu.setValue(ficha.getAtr().get("RYU").getExp());
        jProgressBarAop.setValue(ficha.getAtr().get("AOP").getExp());
        jProgressBarMop.setValue(ficha.getAtr().get("MOP").getExp());
        jProgressBarZts.setValue(ficha.getAtr().get("ZTS").getExp());
        jProgressBarEn.setValue(ficha.getAtr().get("EN").getExp());
    }
    
    private void jButtonRefFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonRefFocusGained
        
    }//GEN-LAST:event_jButtonRefFocusGained

    private void jButtonRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("REF");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        // setando quantidade de treinos
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getRef());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarRef();
        jButtonRef.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonRefActionPerformed

    private void jButtonEmsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonEmsFocusGained
    }//GEN-LAST:event_jButtonEmsFocusGained

    private void jButtonEmsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmsActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("EMS");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getEms());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarEms();
        jButtonEms.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonEmsActionPerformed

    private void jButtonMatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonMatFocusGained
        //atualizarCampos();
    }//GEN-LAST:event_jButtonMatFocusGained

    private void jButtonMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMatActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("MAT");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getMat());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarMat();
        jButtonMat.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonMatActionPerformed

    private void jButtonManFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonManFocusGained
    }//GEN-LAST:event_jButtonManFocusGained

    private void jButtonManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonManActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("MAN");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getMan());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarMan();
        jButtonMan.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonManActionPerformed

    private void jButtonTrsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonTrsFocusGained
    }//GEN-LAST:event_jButtonTrsFocusGained

    private void jButtonTrsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTrsActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("TRS");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getTrs());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarMat();
        jButtonTrs.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonTrsActionPerformed

    private void jButtonEspFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonEspFocusGained
    }//GEN-LAST:event_jButtonEspFocusGained

    private void jButtonEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEspActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("ESP");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getEsp());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarEsp();
        jButtonEsp.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonEspActionPerformed

    private void jButtonCdnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonCdnFocusGained
    }//GEN-LAST:event_jButtonCdnFocusGained

    private void jButtonCdnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCdnActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("CDN");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getCdn());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarCdn();
        jButtonCdn.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonCdnActionPerformed

    private void jProgressBarRefMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarRefMouseEntered
        jProgressBarRef.setToolTipText(jProgressBarRef.getValue()+"/"+jProgressBarRef.getMaximum());
    }//GEN-LAST:event_jProgressBarRefMouseEntered

    private void jProgressBarEmsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarEmsMouseEntered
        jProgressBarEms.setToolTipText(jProgressBarEms.getValue()+"/"+jProgressBarEms.getMaximum());
    }//GEN-LAST:event_jProgressBarEmsMouseEntered

    private void jProgressBarMatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarMatMouseEntered
        jProgressBarMat.setToolTipText(jProgressBarMat.getValue()+"/"+jProgressBarMat.getMaximum());
    }//GEN-LAST:event_jProgressBarMatMouseEntered

    private void jProgressBarManMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarManMouseEntered
        jProgressBarMan.setToolTipText(jProgressBarMan.getValue()+"/"+jProgressBarMan.getMaximum());
    }//GEN-LAST:event_jProgressBarManMouseEntered

    private void jProgressBarTrsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarTrsMouseEntered
        jProgressBarTrs.setToolTipText(jProgressBarTrs.getValue()+"/"+jProgressBarTrs.getMaximum());
    }//GEN-LAST:event_jProgressBarTrsMouseEntered

    private void jProgressBarEspMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarEspMouseEntered
        jProgressBarEsp.setToolTipText(jProgressBarEsp.getValue()+"/"+jProgressBarEsp.getMaximum());
    }//GEN-LAST:event_jProgressBarEspMouseEntered

    private void jProgressBarCdnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarCdnMouseEntered
        jProgressBarCdn.setToolTipText(jProgressBarCdn.getValue()+"/"+jProgressBarCdn.getMaximum());
    }//GEN-LAST:event_jProgressBarCdnMouseEntered

    private void jButtonTreinarPerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonTreinarPerFocusGained
    }//GEN-LAST:event_jButtonTreinarPerFocusGained
    
    private void jButtonTreinarPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTreinarPerActionPerformed
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(jLabelNome.getText()));
        AlgoritmoPrincipal.setLinha("PER");
        new View_treinoProPerHab(null, true).setVisible(true);
        jButtonTreinarPer.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonTreinarPerActionPerformed

    private void jButtonTreinarProFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonTreinarProFocusGained
    }//GEN-LAST:event_jButtonTreinarProFocusGained

    private void jButtonTreinarProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTreinarProActionPerformed
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(jLabelNome.getText()));
        AlgoritmoPrincipal.setLinha("PRO");
        new View_treinoProPerHab(null, true).setVisible(true);
        atualizarCampos();
    }//GEN-LAST:event_jButtonTreinarProActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(jLabelNome.getText()));
        Ficha ficha = AlgoritmoPrincipal.getFicha();
        // setando bonus de exp
        try {
            ficha.setExpBonus(Integer.parseInt(jTextFieldExpBonus.getText()));
        } catch (NumberFormatException e) {
            // nao faz nada
        }

        // inserindo ficha upada
//        AlgoritmoPrincipal.replaceFicha(jLabelNome.getText(), ficha);

        // salvando a ficha
        File folder = new File(AlgoritmoPrincipal.getDIR_FICHAS());
        try {
            AlgoritmoPrincipal.saveFicha(folder);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewTreinos.class.getName()).log(Level.SEVERE, null, ex);
        }

        // mensagem ao usuario
        JOptionPane.showMessageDialog(null, "Ficha salva com sucesso!", "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
        
        // deletando treino pos batalha
        AlgoritmoPrincipal.getTpb().remove(ficha.getNick());
        
        this.dispose();
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonTreinarHabilidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonTreinarHabilidadeFocusGained
    }//GEN-LAST:event_jButtonTreinarHabilidadeFocusGained

    private void jButtonTreinarHabilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTreinarHabilidadeActionPerformed
        AlgoritmoPrincipal.setLinha("HAB");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(jLabelNome.getText()));
        new View_treinoProPerHab(null, true).setVisible(true);
        atualizarCampos();
    }//GEN-LAST:event_jButtonTreinarHabilidadeActionPerformed

    private void jButtonTenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonTenFocusGained
    }//GEN-LAST:event_jButtonTenFocusGained

    private void jButtonTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTenActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("TEN");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getTen());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarTen();
        jButtonTen.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonTenActionPerformed

    private void jButtonRyuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonRyuFocusGained
    }//GEN-LAST:event_jButtonRyuFocusGained

    private void jButtonRyuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRyuActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("RYU");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getRyu());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarRyu();
        jButtonRyu.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonRyuActionPerformed

    private void jButtonEnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonEnFocusGained
    }//GEN-LAST:event_jButtonEnFocusGained

    private void jButtonEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("EN");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getEn());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarEn();
        jButtonEn.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonEnActionPerformed

    private void jButtonAopFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonAopFocusGained
    }//GEN-LAST:event_jButtonAopFocusGained

    private void jButtonAopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAopActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("AOP");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getAop());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarAop();
        jButtonAop.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonAopActionPerformed

    private void jButtonMopFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonMopFocusGained
    }//GEN-LAST:event_jButtonMopFocusGained

    private void jButtonMopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMopActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("MOP");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getMop());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarMop();
        jButtonMop.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonMopActionPerformed

    private void jButtonZtsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonZtsFocusGained
    }//GEN-LAST:event_jButtonZtsFocusGained

    private void jButtonZtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZtsActionPerformed
        String nick = jLabelNome.getText();
        
        AlgoritmoPrincipal.setLinha("ZTS");
        AlgoritmoPrincipal.setFicha(AlgoritmoPrincipal.getPerson(nick));
        AlgoritmoPrincipalTrainer.setQtd(AlgoritmoPrincipal.getTpb(nick).getAop());
        new View_treinoNen(null, true).setVisible(true);
        // removendo up do treino pos batalha
        AlgoritmoPrincipal.getTpb(nick).zerarAop();
        jButtonZts.setEnabled(false);
        atualizarCampos();
    }//GEN-LAST:event_jButtonZtsActionPerformed

    private void jProgressBarTenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarTenMouseEntered
        jProgressBarTen.setToolTipText(jProgressBarTen.getValue()+"/"+jProgressBarTen.getMaximum());
    }//GEN-LAST:event_jProgressBarTenMouseEntered

    private void jProgressBarRyuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarRyuMouseEntered
        jProgressBarRyu.setToolTipText(jProgressBarRyu.getValue()+"/"+jProgressBarRyu.getMaximum());
    }//GEN-LAST:event_jProgressBarRyuMouseEntered

    private void jProgressBarEnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarEnMouseEntered
        jProgressBarEn.setToolTipText(jProgressBarEn.getValue()+"/"+jProgressBarEn.getMaximum());
    }//GEN-LAST:event_jProgressBarEnMouseEntered

    private void jProgressBarAopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarAopMouseEntered
        jProgressBarAop.setToolTipText(jProgressBarAop.getValue()+"/"+jProgressBarAop.getMaximum());
    }//GEN-LAST:event_jProgressBarAopMouseEntered

    private void jProgressBarMopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarMopMouseEntered
        jProgressBarMop.setToolTipText(jProgressBarMop.getValue()+"/"+jProgressBarMop.getMaximum());
    }//GEN-LAST:event_jProgressBarMopMouseEntered

    private void jProgressBarZtsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBarZtsMouseEntered
        jProgressBarZts.setToolTipText(jProgressBarZts.getValue()+"/"+jProgressBarZts.getMaximum());
    }//GEN-LAST:event_jProgressBarZtsMouseEntered

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jButtonTreinarPer.setEnabled(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jButtonZts.setEnabled(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jButtonEn.setEnabled(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        switch (JOptionPane.showConfirmDialog(null, "Curar Hp todo?", "Heal Full Hp?", JOptionPane.YES_NO_OPTION)) {
            case 0:
                Ficha ficha = AlgoritmoPrincipal.getPerson(jLabelNome.getText());
                ficha.setHpAtual(ficha.getHpMax());
                JOptionPane.showMessageDialog(null, "Hp curado!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                break;
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        switch (JOptionPane.showConfirmDialog(null, "Curar MOP todo?", "Heal Full MOP?", JOptionPane.YES_NO_OPTION)) {
            case 0:
                Ficha ficha = AlgoritmoPrincipal.getPerson(jLabelNome.getText());
                ficha.setMopAtual(ficha.getMopMax());
                JOptionPane.showMessageDialog(null, "MOP curado!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                break;
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTreinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewTreinos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAop;
    private javax.swing.JButton jButtonAplicarExp;
    private javax.swing.JButton jButtonCdn;
    private javax.swing.JButton jButtonEms;
    private javax.swing.JButton jButtonEn;
    private javax.swing.JButton jButtonEsp;
    private javax.swing.JButton jButtonMan;
    private javax.swing.JButton jButtonMat;
    private javax.swing.JButton jButtonMop;
    private javax.swing.JButton jButtonRef;
    private javax.swing.JButton jButtonRyu;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonTen;
    private javax.swing.JButton jButtonTreinarHabilidade;
    private javax.swing.JButton jButtonTreinarPer;
    private javax.swing.JButton jButtonTreinarPro;
    private javax.swing.JButton jButtonTrs;
    private javax.swing.JButton jButtonZts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabelAop;
    private javax.swing.JLabel jLabelCdn;
    private javax.swing.JLabel jLabelEms;
    private javax.swing.JLabel jLabelEn;
    private javax.swing.JLabel jLabelEsp;
    private javax.swing.JLabel jLabelLvl;
    private javax.swing.JLabel jLabelLvlNen;
    private javax.swing.JLabel jLabelMan;
    private javax.swing.JLabel jLabelMat;
    private javax.swing.JLabel jLabelMop;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelRef;
    private javax.swing.JLabel jLabelRyu;
    private javax.swing.JLabel jLabelTen;
    private javax.swing.JLabel jLabelTrs;
    private javax.swing.JLabel jLabelZts;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBarAop;
    private javax.swing.JProgressBar jProgressBarCdn;
    private javax.swing.JProgressBar jProgressBarEms;
    private javax.swing.JProgressBar jProgressBarEn;
    private javax.swing.JProgressBar jProgressBarEsp;
    private javax.swing.JProgressBar jProgressBarLvl;
    private javax.swing.JProgressBar jProgressBarMan;
    private javax.swing.JProgressBar jProgressBarMat;
    private javax.swing.JProgressBar jProgressBarMop;
    private javax.swing.JProgressBar jProgressBarNen;
    private javax.swing.JProgressBar jProgressBarRef;
    private javax.swing.JProgressBar jProgressBarRyu;
    private javax.swing.JProgressBar jProgressBarTen;
    private javax.swing.JProgressBar jProgressBarTrs;
    private javax.swing.JProgressBar jProgressBarZts;
    private javax.swing.JTextField jTextFieldExpBonus;
    private javax.swing.JTextField jTextFieldSomarExp;
    // End of variables declaration//GEN-END:variables
}
