/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.batalhas;

import algoritmos.batalhas.AlgoritmoPrincipal;
import algoritmos.trainer.CalculadoraTrainer;
import ficha_personagem.Ficha;
import ficha_personagem.TreinoPosBatalha;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import view.trainer.View_distribuir;

/**
 *
 * @author 422UR4H
 */
public class View_treinoProPerHab extends javax.swing.JDialog {

    /**
     * Creates new form View_treinoProPerHab
     * @param parent
     * @param modal
     */
    public View_treinoProPerHab(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        // MEU CODIGO
        
        TreinoPosBatalha tpb = AlgoritmoPrincipal.getTpb(AlgoritmoPrincipal.getFicha().getNick());
        
        // setando nome do personagem
        jLabelNome.setText(AlgoritmoPrincipal.getFicha().getNick());
        
        // setando jComboBox
        switch (AlgoritmoPrincipal.getLinha()) {
            case "PER":
                for (String nome : AlgoritmoPrincipal.getFicha().getPer().keySet()){
                    jComboBox.addItem(nome);
                }   
                break;
            case "PRO":
                for (int i = 0; i < tpb.getPro().size(); i++) {
                    jComboBox.addItem(tpb.getPro().get(i));
                }   
                break;
            default: // case "HAB":
                for (int i = 0; i < tpb.getHab().size(); i++) {
                    jComboBox.addItem(tpb.getHab().get(i));
                }   
                break;
        }
        
        // FIM DO MEU CODIGO
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabelSubLvl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelDadoBonus = new javax.swing.JLabel();
        jLabelDadoSubLvl = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabelLvl = new javax.swing.JLabel();
        jLabelBonus = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButtonUpouSubLvl = new javax.swing.JButton();
        jButtonUpouBonus = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButtonPerdeuOTreino = new javax.swing.JButton();
        jButtonUpouSubLvlEBonus = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jComboBox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel18.setBackground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Sub:");

        jLabelSubLvl.setBackground(new java.awt.Color(102, 102, 102));
        jLabelSubLvl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSubLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Dado Bonus");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Dado Sub-Lvl");

        jLabelDadoBonus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDadoBonus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelDadoSubLvl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDadoSubLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setBackground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Lvl:");

        jLabelLvl.setBackground(new java.awt.Color(102, 102, 102));
        jLabelLvl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBonus.setBackground(new java.awt.Color(0, 255, 0));
        jLabelBonus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBonus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setBackground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Treinando ");

        jButtonUpouSubLvl.setBackground(new java.awt.Color(102, 102, 102));
        jButtonUpouSubLvl.setText("Upou Sub-Level");
        jButtonUpouSubLvl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpouSubLvlActionPerformed(evt);
            }
        });

        jButtonUpouBonus.setBackground(new java.awt.Color(102, 102, 102));
        jButtonUpouBonus.setText("Upou Bonus");
        jButtonUpouBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpouBonusActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Bonus:");

        jButtonPerdeuOTreino.setBackground(new java.awt.Color(102, 102, 102));
        jButtonPerdeuOTreino.setText("Perdeu o Treino");
        jButtonPerdeuOTreino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerdeuOTreinoActionPerformed(evt);
            }
        });

        jButtonUpouSubLvlEBonus.setBackground(new java.awt.Color(102, 102, 102));
        jButtonUpouSubLvlEBonus.setText("Upou Sub-Level e Bonus");
        jButtonUpouSubLvlEBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpouSubLvlEBonusActionPerformed(evt);
            }
        });

        jButtonFechar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonFechar.setText("FECHAR");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxItemStateChanged(evt);
            }
        });

        jLabel20.setBackground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Personagem: ");

        jLabelNome.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonPerdeuOTreino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpouBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpouSubLvl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpouSubLvlEBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelSubLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelDadoBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDadoSubLvl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelSubLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDadoSubLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDadoBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpouSubLvlEBonus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpouSubLvl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpouBonus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPerdeuOTreino)
                .addGap(18, 18, 18)
                .addComponent(jButtonFechar)
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void uparSubLvl() {
        Ficha ficha = AlgoritmoPrincipal.getPerson(jLabelNome.getText());
        String nome = jComboBox.getSelectedItem().toString();
        
        switch (AlgoritmoPrincipal.getLinha()) {
            case "PER":
                ficha.getPer().get(nome).incrementaLvj();
                jLabelSubLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvj()));
                // se o lvl da jlabel for diferente do lvl da ficha, o personagem upou. logo...
                if (ficha.getPer().get(nome).getLvl() != Integer.parseInt(jLabelLvl.getText())) {
                    // setando lvl, lvj (subLvl) e bonus
                    jLabelLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvl()));
                    // os codigo abaixo são equivalente a:
                    // jLabelSubLvl.setText("0"); e jLabelBonus.setText("0");
                    jLabelSubLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvj()));
                    jLabelBonus.setText(String.valueOf(ficha.getPer().get(nome).getBonus()));
                    
                    // mensagem de upgrade ao usuário
                    JOptionPane.showMessageDialog(null, "Seu nível de perícia subiu!",
                            "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                    
                    // incrementando exp do up na ficha
                    // CalculadoraUpper.putExpFicha retorna true se a ficha upar e false se não upar
                    if (CalculadoraTrainer.putExpFicha(ficha.getPer().get(nome).getLvl() * 100, ficha)) {
                        // mensagem de upgrade ao usuário
                        JOptionPane.showMessageDialog(null, "Seu personagem subiu de nível!",
                                "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                        
                        new View_distribuir(null, true).setVisible(true);
                    }
                }   break;
            case "PRO":
                ficha.getPro().get(nome).incrementaLvj();
                jLabelSubLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvj()));
                // se o lvl da jlabel for diferente do lvl da ficha, o personagem upou. logo...
                if (ficha.getPro().get(nome).getLvl() != Integer.parseInt(jLabelLvl.getText())) {
                    // setando lvl, lvj (subLvl) e bonus
                    jLabelLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvl()));
                    // os codigo abaixo são equivalente a:
                    // jLabelSubLvl.setText("0"); e jLabelBonus.setText("0");
                    jLabelSubLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvj()));
                    jLabelBonus.setText(String.valueOf(ficha.getPro().get(nome).getBonus()));
                    
                    // mensagem de upgrade ao usuário
                    JOptionPane.showMessageDialog(null, "Seu nível de proficiência subiu!",
                            "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                    
                    // incrementando exp do up na ficha
                    // CalculadoraUpper.putExpFicha retorna true se a ficha upar e false se não upar
                    if (CalculadoraTrainer.putExpFicha(ficha.getPro().get(nome).getLvl() * 100, ficha)) {
                        // mensagem de upgrade ao usuário
                        JOptionPane.showMessageDialog(null, "Seu personagem subiu de nível!",
                                "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                        
                        new View_distribuir(null, true).setVisible(true);
                    }
                }   break;
            default: // case "HAB":
                ficha.getHabilidade(nome).incrementaSubLvl();
                jLabelSubLvl.setText(String.valueOf(ficha.getHabilidade(nome).getSubLvl()));
                // se o lvl da jlabel for diferente do lvl da ficha, o personagem upou. logo...
                if (ficha.getHabilidade(nome).getLvl() != Integer.parseInt(jLabelLvl.getText())) {
                    // setando lvl, lvj (subLvl) e bonus
                    jLabelLvl.setText(String.valueOf(ficha.getHabilidade(nome).getLvl()));
                    // os codigo abaixo são equivalente a:
                    // jLabelSubLvl.setText("0"); e jLabelBonus.setText("0");
                    jLabelSubLvl.setText(String.valueOf(ficha.getHabilidade(nome).getSubLvl()));
                    jLabelBonus.setText(String.valueOf(ficha.getHabilidade(nome).getBonus()));
                    
                    // mensagem de upgrade ao usuário
                    JOptionPane.showMessageDialog(null, "Seu nível de proficiência subiu!",
                            "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                    
                    // incrementando exp do up na ficha
                    // CalculadoraUpper.putExpFicha retorna true se a ficha upar e false se não upar
                    if (CalculadoraTrainer.putExpFicha(ficha.getHabilidade(nome).getLvl() * 100, ficha)) {
                        // mensagem de upgrade ao usuário
                        JOptionPane.showMessageDialog(null, "Seu personagem subiu de nível!",
                                "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                        
                        new View_distribuir(null, true).setVisible(true);
                    }
                }   break;
        }
        
        // setar dado
        String dir = "/images/dados/";
        dir += String.valueOf(Integer.parseInt(jLabelSubLvl.getText()) + 1);
        dir += ".png";
        ImageIcon icone = criarImageIcon(dir, "null");
        jLabelDadoSubLvl.setIcon(icone);
        
        dir = "/images/dados/";
        dir += jLabelBonus.getText();
        dir += ".png";
        icone = criarImageIcon(dir, "null");
        jLabelDadoBonus.setIcon(icone);
    }
    
    
    public ImageIcon criarImageIcon(String caminho, String descricao) {
        java.net.URL imgURL = getClass().getResource(caminho);
        if (imgURL != null) {
            return new ImageIcon(imgURL, descricao);
        } else {
            System.err.println("Não foi possível carregar o arquivo de imagem: " + caminho);
            return null;
        }
    }
    
    private void uparBonus() {
        Ficha ficha = AlgoritmoPrincipal.getPerson(jLabelNome.getText());
        String nome = jComboBox.getSelectedItem().toString();
        
        
        switch (AlgoritmoPrincipal.getLinha()) {
            case "PER":
                ficha.getPer().get(nome).incrementaBonus();
                jLabelBonus.setText(String.valueOf(ficha.getPer().get(nome).getBonus()));
                break;
            case "PRO":
                ficha.getPro().get(nome).incrementaBonus();
                jLabelBonus.setText(String.valueOf(ficha.getPro().get(nome).getBonus()));
                break;
            default: // case "HAB":
                ficha.getHabilidade(nome).incrementaBonus();
                jLabelBonus.setText(String.valueOf(ficha.getHabilidade(nome).getBonus()));
                break;
        }
        
        // se o bonus for maior que 7, não haverá mais treino
        // assim como se lvl for maior que 7, não haverá mais bonus
        if (Integer.parseInt(jLabelBonus.getText()) > 7 || Integer.parseInt(jLabelLvl.getText()) > 6) {
            jLabelDadoBonus.setIcon(null);
            return;
        }
        // setar dado
        String dir = "/images/dados/";
        dir += jLabelBonus.getText() + ".png";
        ImageIcon icone = criarImageIcon(dir, "null");
        jLabelDadoBonus.setIcon(icone);
    }
    
    private void terminarTreinoAtual() {
        TreinoPosBatalha tpb = AlgoritmoPrincipal.getTpb(jLabelNome.getText());
        // tirar treino de tpb
        switch (AlgoritmoPrincipal.getLinha()) {
            case "PRO":
                tpb.getPro().remove(jComboBox.getSelectedItem().toString());
                break;
            case "HAB":
                tpb.getHab().remove(jComboBox.getSelectedItem().toString());
                break;
        }
        jComboBox.removeItem(jComboBox.getSelectedItem());
    }

    private void desabilitarButtons() {
        jButtonUpouSubLvlEBonus.setEnabled(false);
        jButtonPerdeuOTreino.setEnabled(false);
        jButtonUpouSubLvl.setEnabled(false);
        jButtonUpouBonus.setEnabled(false);
    }
    
    private void limparLabels() {
        jLabelLvl.setText("");
        jLabelSubLvl.setText("");
        jLabelBonus.setText("");
        jLabelDadoBonus.setIcon(null);
        jLabelDadoSubLvl.setIcon(null);
    }
    
    private void jButtonUpouSubLvlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpouSubLvlActionPerformed
        uparSubLvl();
        terminarTreinoAtual();
        desabilitarButtons();
    }//GEN-LAST:event_jButtonUpouSubLvlActionPerformed

    private void jButtonUpouBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpouBonusActionPerformed
        uparBonus();
        terminarTreinoAtual();
        desabilitarButtons();
    }//GEN-LAST:event_jButtonUpouBonusActionPerformed

    private void jButtonPerdeuOTreinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerdeuOTreinoActionPerformed
        terminarTreinoAtual();
        desabilitarButtons();
    }//GEN-LAST:event_jButtonPerdeuOTreinoActionPerformed

    private void jButtonUpouSubLvlEBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpouSubLvlEBonusActionPerformed
        uparBonus();
        uparSubLvl();
        terminarTreinoAtual();
        desabilitarButtons();
    }//GEN-LAST:event_jButtonUpouSubLvlEBonusActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxItemStateChanged
        Ficha ficha = AlgoritmoPrincipal.getPerson(jLabelNome.getText());
        String nome;
        // terminando funcao caso os itens de treino tenham acabado
        try {
            nome = jComboBox.getSelectedItem().toString();
            if (nome == null) {
                // limpando labels
                limparLabels();
                return;
            }
        } catch (NullPointerException e) {
            // limpando labels
            limparLabels();
            return;
        }

        // setar lvl
        switch (AlgoritmoPrincipal.getLinha()) {
            case "PER":
            jLabelLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvl()));
            jLabelSubLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvj()));
            jLabelBonus.setText(String.valueOf(ficha.getPer().get(nome).getBonus()));
            break;
            case "PRO":
            jLabelLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvl()));
            jLabelSubLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvj()));
            jLabelBonus.setText(String.valueOf(ficha.getPro().get(nome).getBonus()));
            break;
            default: // case "HAB":
            jLabelLvl.setText(String.valueOf(ficha.getHabilidade(nome).getLvl()));
            jLabelSubLvl.setText(String.valueOf(ficha.getHabilidade(nome).getSubLvl()));
            jLabelBonus.setText(String.valueOf(ficha.getHabilidade(nome).getBonus()));
            break;
        }

        // setando icones iniciais dos dados
        // setar dado sub-lvl
        String dir = "/images/dados/";
        dir += String.valueOf(Integer.parseInt(jLabelSubLvl.getText()) + 1) + ".png";
        ImageIcon icone = criarImageIcon(dir, "null");
        jLabelDadoSubLvl.setIcon(icone);

        // se o bonus for maior que 7, não haverá mais treino
        // assim como se lvl for maior que 7, não haverá mais bonus
        if (Integer.parseInt(jLabelBonus.getText()) > 7 || Integer.parseInt(jLabelLvl.getText()) > 6) {
            jLabelDadoBonus.setIcon(null);
            return;
        }
        // setar dado bonus
        dir = "/images/dados/";
        dir += jLabelBonus.getText() + ".png";
        icone = criarImageIcon(dir, "null");
        jLabelDadoBonus.setIcon(icone);
    }//GEN-LAST:event_jComboBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_treinoProPerHab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            View_treinoProPerHab dialog = new View_treinoProPerHab(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonPerdeuOTreino;
    private javax.swing.JButton jButtonUpouBonus;
    private javax.swing.JButton jButtonUpouSubLvl;
    private javax.swing.JButton jButtonUpouSubLvlEBonus;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelBonus;
    private javax.swing.JLabel jLabelDadoBonus;
    private javax.swing.JLabel jLabelDadoSubLvl;
    private javax.swing.JLabel jLabelLvl;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelSubLvl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
