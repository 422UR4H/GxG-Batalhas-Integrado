/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.batalhas;

import algoritmos.batalhas.AlgoritmoPrincipal;
import algoritmos.batalhas.Calculadora;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 422UR4H
 */
public class ViewInfosMobs extends javax.swing.JFrame {

    /**
     * Creates new form ViewInfosMobs
     */
    public ViewInfosMobs() {
        initComponents();
        
        // meu codigo
        
        DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();
        Object[] titulo = new Object[3];
        Object[] valores = new Object[3];
        
        // se o usuario quiser ver os mops
        if (AlgoritmoPrincipal.getLinha().equals(AlgoritmoPrincipal.getMOP())) {
            // nomeando os titulos das colunas
            titulo[0] = "Nome";
            titulo[1] = "Mop Maximo";
            titulo[2] = "Mop Atual";
            dtm.setColumnIdentifiers(titulo);
            
            // setando valores
            for (String nome : AlgoritmoPrincipal.getFichas().keySet()) {
                if (!AlgoritmoPrincipal.getPerson(nome).isCriaturaDoMestre()) {
                    continue;
                }
                valores[0] = AlgoritmoPrincipal.getPerson(nome).getNick();
                valores[1] = AlgoritmoPrincipal.getPerson(nome).getMopMax();
                valores[2] = AlgoritmoPrincipal.getPerson(nome).getMopAtual();
                dtm.addRow(valores);
            }
        } else if (AlgoritmoPrincipal.getLinha().equals(AlgoritmoPrincipal.getEXT())) {
            // nomeando os titulos das colunas
            titulo[0] = "Nome";
            titulo[1] = "ExtensÃ£o";
            titulo[2] = "REN perdido";
            dtm.setColumnIdentifiers(titulo);
            
            // calculando e setando valores
            for (String nome : AlgoritmoPrincipal.getFichas().keySet()) {
                if (!AlgoritmoPrincipal.getPerson(nome).isCriaturaDoMestre()) {
                    continue;
                }
                // calculando ren perdido
                int renPerdido = Calculadora.getRenLivre(AlgoritmoPrincipal.getPerson(nome), 100);
                renPerdido -= Calculadora.getRen(AlgoritmoPrincipal.getPerson(nome), 100);
                
                // setando valores
                valores[0] = AlgoritmoPrincipal.getPerson(nome).getNick();
                valores[1] = AlgoritmoPrincipal.getPerson(nome).getCorpo().getValor();
                valores[2] = renPerdido;
                dtm.addRow(valores);
            }
        } else { // se nao, so pode ser os hps
            // nomeando os titulos das colunas
            titulo[0] = "Nome";
            titulo[1] = "Hp Maximo";
            titulo[2] = "Hp Atual";
            dtm.setColumnIdentifiers(titulo);
            
            // setando valores
            for (String nome : AlgoritmoPrincipal.getFichas().keySet()) {
                if (!AlgoritmoPrincipal.getPerson(nome).isCriaturaDoMestre()) {
                    continue;
                }
                // nao mostra mobs repetidos+
                if ((((int) nome.charAt(nome.length() - 1)) > 47) && (((int) nome.charAt(nome.length() - 1)) < 58)) {
                    continue;
                }
                valores[0] = AlgoritmoPrincipal.getPerson(nome).getNick();
                valores[1] = AlgoritmoPrincipal.getPerson(nome).getHpMax();
                valores[2] = AlgoritmoPrincipal.getPerson(nome).getHpAtual();
                dtm.addRow(valores);
            }
        }
        
        // fim do meu codigo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Info Mobs");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jTable.setBackground(new java.awt.Color(51, 51, 51));
        jTable.setForeground(new java.awt.Color(0, 255, 0));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setSelectionBackground(new java.awt.Color(0, 255, 255));
        jTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(jTable);

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setText("Fechar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(6, 6, 6))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewInfosMobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewInfosMobs().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
