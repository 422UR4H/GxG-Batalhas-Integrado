/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.gerador;

import algoritmos.gerador.AlgoritmoPrincipalGerador;
import algoritmos.gerador.CalculadoraGerador;
import algoritmos.habilidades.CalculadoraHabilidades;
import ficha_personagem.Classe;
import ficha_personagem.Classes;
import ficha_personagem.Ficha;
import ficha_personagem.LvlBonus;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import view.habilidades.ViewPrincipalHabilidades;
import view.trainer.ViewPrincipalTrainer;
import algoritmos.batalhas.AlgoritmoPrincipal;

/**
 *
 * @author 422UR4H
 */
public class ViewPrincipalGerador extends javax.swing.JFrame {

    /**
     * Creates new form ViewPrincipal
     */
    public ViewPrincipalGerador() {
        initComponents();

        
        // meu codigo
        
        // iniciando AlgoritmoPrincipal
        try {
            if (!AlgoritmoPrincipalGerador.init()) {
                this.dispose();
                return;
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
            this.dispose();
            return;
        }
        
        // desabilitando jButtons
        jButtonDecCar.setEnabled(false);
        jButtonDecCon.setEnabled(false);
        jButtonDecDex.setEnabled(false);
        jButtonDecFor.setEnabled(false);
        jButtonDecInt.setEnabled(false);
        jButtonDecMen.setEnabled(false);
        jButtonDecVel.setEnabled(false);
        jButtonIncCar.setEnabled(false);
        jButtonIncCon.setEnabled(false);
        jButtonIncDex.setEnabled(false);
        jButtonIncFor.setEnabled(false);
        jButtonIncInt.setEnabled(false);
        jButtonIncMen.setEnabled(false);
        jButtonIncVel.setEnabled(false);
        jButtonDistribuirESalvar.setEnabled(false);
        
        // setando lvl inicial na jTextFieldLvlInicial
        jTextFieldLvInicial.setText(String.valueOf(AlgoritmoPrincipalGerador.getLVL_INICIAL()));
        
        // preenchendo jComboBoxClasses com as Classes do sistema
        for (String classe : Classes.getClasses()) {
            jComboBoxClasse.addItem(classe);
        }
        
        // fim do meu codigo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNick = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxClasse = new javax.swing.JComboBox<>();
        jComboBoxNen = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxTendencia = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxHunter = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldIdade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldAltura = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldPeso = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldLvInicial = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldExpInicial = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldExpBonus = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jCheckBoxPersonagemDeJogador = new javax.swing.JCheckBox();
        jCheckBoxCriaturaDoMestre = new javax.swing.JCheckBox();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldFor = new javax.swing.JTextField();
        jTextFieldCon = new javax.swing.JTextField();
        jTextFieldDex = new javax.swing.JTextField();
        jTextFieldInt = new javax.swing.JTextField();
        jTextFieldCar = new javax.swing.JTextField();
        jTextFieldMen = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextFieldRef = new javax.swing.JTextField();
        jTextFieldEms = new javax.swing.JTextField();
        jTextFieldMat = new javax.swing.JTextField();
        jTextFieldMan = new javax.swing.JTextField();
        jTextFieldTrs = new javax.swing.JTextField();
        jTextFieldEsp = new javax.swing.JTextField();
        jTextFieldCdn = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jTextFieldTen = new javax.swing.JTextField();
        jTextFieldRyu = new javax.swing.JTextField();
        jTextFieldEn = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldAop = new javax.swing.JTextField();
        jTextFieldMop = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jTextFieldZts = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldIni = new javax.swing.JTextField();
        jTextFieldEsq = new javax.swing.JTextField();
        jTextFieldVel = new javax.swing.JTextField();
        jButtonCalcular = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabelLvl = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabelExp = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabelRen = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabelForIni = new javax.swing.JLabel();
        jLabelConIni = new javax.swing.JLabel();
        jLabelDexIni = new javax.swing.JLabel();
        jLabelIntIni = new javax.swing.JLabel();
        jLabelCarIni = new javax.swing.JLabel();
        jLabelMenIni = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabelValCon = new javax.swing.JLabel();
        jLabelValDex = new javax.swing.JLabel();
        jLabelValInt = new javax.swing.JLabel();
        jLabelValCar = new javax.swing.JLabel();
        jLabelValMen = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabelValFor = new javax.swing.JLabel();
        jLabelBMen = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabelBFor = new javax.swing.JLabel();
        jLabelModFor = new javax.swing.JLabel();
        jLabelModCon = new javax.swing.JLabel();
        jLabelModDex = new javax.swing.JLabel();
        jLabelModInt = new javax.swing.JLabel();
        jLabelModCar = new javax.swing.JLabel();
        jLabelModMen = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabelBCon = new javax.swing.JLabel();
        jLabelBDex = new javax.swing.JLabel();
        jLabelBInt = new javax.swing.JLabel();
        jLabelBCar = new javax.swing.JLabel();
        jLabelPerMen = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabelPerFor = new javax.swing.JLabel();
        jLabelPerCon = new javax.swing.JLabel();
        jLabelPerDex = new javax.swing.JLabel();
        jLabelPerInt = new javax.swing.JLabel();
        jLabelPerCar = new javax.swing.JLabel();
        jButtonDecMen = new javax.swing.JButton();
        jButtonDecCar = new javax.swing.JButton();
        jButtonDecCon = new javax.swing.JButton();
        jButtonDecFor = new javax.swing.JButton();
        jButtonDecInt = new javax.swing.JButton();
        jButtonDecDex = new javax.swing.JButton();
        jButtonIncFor = new javax.swing.JButton();
        jButtonIncCon = new javax.swing.JButton();
        jButtonIncInt = new javax.swing.JButton();
        jButtonIncDex = new javax.swing.JButton();
        jButtonIncMen = new javax.swing.JButton();
        jButtonIncCar = new javax.swing.JButton();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabelHp = new javax.swing.JLabel();
        jLabelEsq = new javax.swing.JLabel();
        jLabelIni = new javax.swing.JLabel();
        jLabelCrt = new javax.swing.JLabel();
        jLabelApr = new javax.swing.JLabel();
        jButtonDistribuirESalvar = new javax.swing.JButton();
        jLabel94 = new javax.swing.JLabel();
        jLabelPontos = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jButtonDecVel = new javax.swing.JButton();
        jLabelVel = new javax.swing.JLabel();
        jButtonIncVel = new javax.swing.JButton();
        jLabelCdn = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabelLvlNen = new javax.swing.JLabel();
        jLabelExpNen = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabelMop = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItemIntegrarFicha = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GxG Gerador de Fichas");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Formulário do personagem");

        jLabel2.setBackground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Nick: ");

        jTextFieldNick.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldNick.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldNick.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldNick.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldNick.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldNick.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNickFocusGained(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Classe: ");

        jComboBoxClasse.setBackground(new java.awt.Color(102, 102, 102));

        jComboBoxNen.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxNen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reforco", "Emissao", "Transformacao", "Materializacao", "Manipulacao", "Especialista" }));

        jLabel4.setBackground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Nen: ");

        jLabel5.setBackground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Tendência: ");

        jComboBoxTendencia.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxTendencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lawfull-Good", "Lawfull-Neutral", "Lawfull-Evil", "Neutral-Good", "True-Neutral", "Neutral-Evil", "Chaotic-Good", "Chaotic-Neutral", "Chaotic-Evil" }));

        jLabel6.setBackground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Hunter: ");

        jComboBoxHunter.setBackground(new java.awt.Color(102, 102, 102));
        jComboBoxHunter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Candidato", "Amador", "Archaeologist", "Beast", "Blacklist", "Cientist", "Contract", "Criminal", "Desapared", "Gourmet", "Hacker", "Head", "Information", "Jackpot", "Medicinal", "Music", "Sea", "Treasure", "Virus", "Youth & Beauty" }));

        jLabel7.setBackground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Idade: ");

        jTextFieldIdade.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldIdade.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldIdade.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldIdade.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldIdade.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldIdade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldIdadeFocusGained(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Altura: ");

        jTextFieldAltura.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldAltura.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldAltura.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldAltura.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldAltura.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldAltura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAlturaFocusGained(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Peso: ");

        jTextFieldPeso.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldPeso.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldPeso.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldPeso.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldPeso.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldPeso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPesoFocusGained(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Lvl inicial: ");

        jTextFieldLvInicial.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldLvInicial.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldLvInicial.setText("3");
        jTextFieldLvInicial.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldLvInicial.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldLvInicial.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldLvInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldLvInicialFocusGained(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Exp inicial: ");

        jTextFieldExpInicial.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldExpInicial.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldExpInicial.setText("0");
        jTextFieldExpInicial.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldExpInicial.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldExpInicial.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldExpInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldExpInicialFocusGained(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Exp bônus: ");

        jTextFieldExpBonus.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldExpBonus.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldExpBonus.setText("0");
        jTextFieldExpBonus.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldExpBonus.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldExpBonus.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldExpBonus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldExpBonusFocusGained(evt);
            }
        });

        jLabel38.setBackground(new java.awt.Color(102, 102, 102));
        jLabel38.setText("Entradas iniciais");

        jCheckBoxPersonagemDeJogador.setBackground(new java.awt.Color(102, 102, 102));
        jCheckBoxPersonagemDeJogador.setText("Person of Player");

        jCheckBoxCriaturaDoMestre.setBackground(new java.awt.Color(102, 102, 102));
        jCheckBoxCriaturaDoMestre.setText("Mob");

        jLabel28.setBackground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("Nome:");

        jTextFieldName.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldName.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldName.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldName.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldName.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNameFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldExpInicial, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldExpBonus)
                            .addComponent(jTextFieldLvInicial, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jCheckBoxPersonagemDeJogador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxCriaturaDoMestre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldIdade)
                            .addComponent(jTextFieldPeso)
                            .addComponent(jTextFieldAltura)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNick, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxTendencia, 0, 0, Short.MAX_VALUE)
                            .addComponent(jComboBoxHunter, 0, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxClasse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxNen, 0, 0, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNick, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxNen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxTendencia, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxHunter, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxPersonagemDeJogador, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxCriaturaDoMestre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldLvInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldExpInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldExpBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jLabel13.setBackground(new java.awt.Color(102, 102, 102));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Atributos Iniciais");

        jLabel14.setBackground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("For: ");

        jLabel15.setBackground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Con: ");

        jLabel16.setBackground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Dex: ");

        jLabel17.setBackground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Int: ");

        jLabel18.setBackground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Car: ");

        jLabel19.setBackground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Men: ");

        jTextFieldFor.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldFor.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldFor.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldFor.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldFor.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldFor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldForFocusGained(evt);
            }
        });

        jTextFieldCon.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldCon.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldCon.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldCon.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldCon.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldCon.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldConFocusGained(evt);
            }
        });

        jTextFieldDex.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldDex.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldDex.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldDex.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldDex.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldDex.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDexFocusGained(evt);
            }
        });

        jTextFieldInt.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldInt.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldInt.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldInt.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldInt.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldInt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldIntFocusGained(evt);
            }
        });

        jTextFieldCar.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldCar.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldCar.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldCar.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldCar.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldCar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCarFocusGained(evt);
            }
        });

        jTextFieldMen.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldMen.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldMen.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldMen.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldMen.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldMen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldMenFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldMen)
                            .addComponent(jTextFieldFor)
                            .addComponent(jTextFieldCon)
                            .addComponent(jTextFieldDex)
                            .addComponent(jTextFieldInt)
                            .addComponent(jTextFieldCar))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldFor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldCon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldInt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldCar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldMen))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        jLabel20.setBackground(new java.awt.Color(102, 102, 102));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Atributos de Nen");

        jLabel21.setBackground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Ref: ");

        jLabel22.setBackground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Ems: ");

        jLabel23.setBackground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Mat: ");

        jLabel24.setBackground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Man: ");

        jLabel25.setBackground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Trs: ");

        jLabel26.setBackground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("Esp: ");

        jTextFieldRef.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldRef.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldRef.setText("0");
        jTextFieldRef.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldRef.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldRef.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldRef.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldRefFocusGained(evt);
            }
        });

        jTextFieldEms.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldEms.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldEms.setText("0");
        jTextFieldEms.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldEms.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldEms.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldEms.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEmsFocusGained(evt);
            }
        });

        jTextFieldMat.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldMat.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldMat.setText("0");
        jTextFieldMat.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldMat.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldMat.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldMat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldMatFocusGained(evt);
            }
        });

        jTextFieldMan.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldMan.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldMan.setText("0");
        jTextFieldMan.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldMan.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldMan.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldMan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldManFocusGained(evt);
            }
        });

        jTextFieldTrs.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldTrs.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldTrs.setText("0");
        jTextFieldTrs.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldTrs.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTrs.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldTrs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTrsFocusGained(evt);
            }
        });

        jTextFieldEsp.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldEsp.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldEsp.setText("0");
        jTextFieldEsp.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldEsp.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldEsp.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldEsp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEspFocusGained(evt);
            }
        });

        jTextFieldCdn.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldCdn.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldCdn.setText("0");
        jTextFieldCdn.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldCdn.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldCdn.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldCdn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCdnFocusGained(evt);
            }
        });

        jLabel27.setBackground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("Cdn: ");

        jTextFieldTen.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldTen.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldTen.setText("0");
        jTextFieldTen.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldTen.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTen.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldTen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTenFocusGained(evt);
            }
        });

        jTextFieldRyu.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldRyu.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldRyu.setText("0");
        jTextFieldRyu.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldRyu.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldRyu.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldRyu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldRyuFocusGained(evt);
            }
        });

        jTextFieldEn.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldEn.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldEn.setText("0");
        jTextFieldEn.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldEn.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldEn.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldEn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEnFocusGained(evt);
            }
        });

        jLabel29.setBackground(new java.awt.Color(102, 102, 102));
        jLabel29.setText("Ten: ");

        jLabel30.setBackground(new java.awt.Color(102, 102, 102));
        jLabel30.setText("Ryu: ");

        jTextFieldAop.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldAop.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldAop.setText("0");
        jTextFieldAop.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldAop.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldAop.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldAop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAopFocusGained(evt);
            }
        });

        jTextFieldMop.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldMop.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldMop.setText("1");
        jTextFieldMop.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldMop.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldMop.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldMop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldMopFocusGained(evt);
            }
        });

        jLabel40.setText("En: ");

        jLabel44.setText("Aop: ");

        jLabel52.setText("Mop: ");

        jLabel53.setText("Zts: ");

        jTextFieldZts.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldZts.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldZts.setText("0");
        jTextFieldZts.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldZts.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldZts.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldZts.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldZtsFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEms, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldMat, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldMan, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldTrs, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldEsp, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldRef, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldCdn)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldEn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jTextFieldAop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jTextFieldMop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jTextFieldRyu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jTextFieldTen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jTextFieldZts, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldRef)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldEms)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldMat)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldMan)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldTrs)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldEsp)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldCdn)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldTen)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldRyu)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldEn)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldAop)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldMop)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldZts)
                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
        );

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));

        jLabel33.setBackground(new java.awt.Color(102, 102, 102));
        jLabel33.setText("Proficiências Treinadas");

        jLabel34.setBackground(new java.awt.Color(102, 102, 102));
        jLabel34.setText("Iniciativa: ");

        jLabel35.setBackground(new java.awt.Color(102, 102, 102));
        jLabel35.setText("Esquiva (C.A): ");

        jLabel36.setBackground(new java.awt.Color(102, 102, 102));
        jLabel36.setText("Velocidade: ");

        jTextFieldIni.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldIni.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldIni.setText("0");
        jTextFieldIni.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldIni.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldIni.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldIni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldIniFocusGained(evt);
            }
        });

        jTextFieldEsq.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldEsq.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldEsq.setText("0");
        jTextFieldEsq.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldEsq.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldEsq.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldEsq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEsqFocusGained(evt);
            }
        });

        jTextFieldVel.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldVel.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldVel.setText("0");
        jTextFieldVel.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldVel.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldVel.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldVel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldVelFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldIni)
                            .addComponent(jTextFieldEsq)
                            .addComponent(jTextFieldVel))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldIni)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldEsq)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldVel)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonCalcular.setBackground(new java.awt.Color(102, 102, 102));
        jButtonCalcular.setText("Calcular");
        jButtonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));

        jLabel37.setBackground(new java.awt.Color(102, 102, 102));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Dados calculados");

        jLabel39.setBackground(new java.awt.Color(102, 102, 102));
        jLabel39.setText("Lvl: ");

        jLabelLvl.setBackground(new java.awt.Color(102, 102, 102));
        jLabelLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel41.setBackground(new java.awt.Color(102, 102, 102));
        jLabel41.setText("Exp: ");

        jLabelExp.setBackground(new java.awt.Color(102, 102, 102));
        jLabelExp.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel43.setBackground(new java.awt.Color(102, 102, 102));
        jLabel43.setText("Ren: ");

        jLabelRen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelRen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel45.setBackground(new java.awt.Color(102, 102, 102));
        jLabel45.setText("For: ");

        jLabel46.setBackground(new java.awt.Color(102, 102, 102));
        jLabel46.setText("Con: ");

        jLabel47.setBackground(new java.awt.Color(102, 102, 102));
        jLabel47.setText("Dex: ");

        jLabel48.setBackground(new java.awt.Color(102, 102, 102));
        jLabel48.setText("Int: ");

        jLabel49.setBackground(new java.awt.Color(102, 102, 102));
        jLabel49.setText("Car: ");

        jLabel50.setBackground(new java.awt.Color(102, 102, 102));
        jLabel50.setText("Men: ");

        jLabel51.setBackground(new java.awt.Color(102, 102, 102));
        jLabel51.setText("ATR");

        jLabelForIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelForIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelForIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelConIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelConIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelConIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelDexIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelDexIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDexIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelIntIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelIntIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIntIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelCarIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelCarIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCarIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelMenIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelMenIni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMenIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel58.setBackground(new java.awt.Color(102, 102, 102));
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel58.setText("INI");

        jLabelValCon.setBackground(new java.awt.Color(102, 102, 102));
        jLabelValCon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelValCon.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelValDex.setBackground(new java.awt.Color(102, 102, 102));
        jLabelValDex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelValDex.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelValInt.setBackground(new java.awt.Color(102, 102, 102));
        jLabelValInt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelValInt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelValCar.setBackground(new java.awt.Color(102, 102, 102));
        jLabelValCar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelValCar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelValMen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelValMen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelValMen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel64.setBackground(new java.awt.Color(102, 102, 102));
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel64.setText("VAL");

        jLabelValFor.setBackground(new java.awt.Color(102, 102, 102));
        jLabelValFor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelValFor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBMen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBMen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBMen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel67.setBackground(new java.awt.Color(102, 102, 102));
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel67.setText("B.");

        jLabelBFor.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBFor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBFor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelModFor.setBackground(new java.awt.Color(102, 102, 102));
        jLabelModFor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModFor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelModCon.setBackground(new java.awt.Color(102, 102, 102));
        jLabelModCon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModCon.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelModDex.setBackground(new java.awt.Color(102, 102, 102));
        jLabelModDex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModDex.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelModInt.setBackground(new java.awt.Color(102, 102, 102));
        jLabelModInt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModInt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelModCar.setBackground(new java.awt.Color(102, 102, 102));
        jLabelModCar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModCar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelModMen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelModMen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModMen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel75.setBackground(new java.awt.Color(102, 102, 102));
        jLabel75.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel75.setText("MOD");

        jLabelBCon.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBCon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBCon.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBDex.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBDex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBDex.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBInt.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBInt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBInt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBCar.setBackground(new java.awt.Color(102, 102, 102));
        jLabelBCar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBCar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPerMen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelPerMen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerMen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel81.setBackground(new java.awt.Color(102, 102, 102));
        jLabel81.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel81.setText("PER");

        jLabelPerFor.setBackground(new java.awt.Color(102, 102, 102));
        jLabelPerFor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerFor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPerCon.setBackground(new java.awt.Color(102, 102, 102));
        jLabelPerCon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerCon.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPerDex.setBackground(new java.awt.Color(102, 102, 102));
        jLabelPerDex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerDex.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPerInt.setBackground(new java.awt.Color(102, 102, 102));
        jLabelPerInt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerInt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPerCar.setBackground(new java.awt.Color(102, 102, 102));
        jLabelPerCar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerCar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonDecMen.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecMen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecMen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecMenActionPerformed(evt);
            }
        });

        jButtonDecCar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecCarActionPerformed(evt);
            }
        });

        jButtonDecCon.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecCon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecConActionPerformed(evt);
            }
        });

        jButtonDecFor.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecFor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecFor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecForActionPerformed(evt);
            }
        });

        jButtonDecInt.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecInt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecIntActionPerformed(evt);
            }
        });

        jButtonDecDex.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecDex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecDex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecDexActionPerformed(evt);
            }
        });

        jButtonIncFor.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncFor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncFor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncForActionPerformed(evt);
            }
        });

        jButtonIncCon.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncCon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncConActionPerformed(evt);
            }
        });

        jButtonIncInt.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncInt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncIntActionPerformed(evt);
            }
        });

        jButtonIncDex.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncDex.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncDex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncDexActionPerformed(evt);
            }
        });

        jButtonIncMen.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncMen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncMen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncMenActionPerformed(evt);
            }
        });

        jButtonIncCar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncCar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncCarActionPerformed(evt);
            }
        });

        jLabel87.setBackground(new java.awt.Color(102, 102, 102));
        jLabel87.setText("HP: ");

        jLabel88.setBackground(new java.awt.Color(102, 102, 102));
        jLabel88.setText("CA: ");

        jLabel89.setBackground(new java.awt.Color(102, 102, 102));
        jLabel89.setText("INI: ");

        jLabel92.setBackground(new java.awt.Color(102, 102, 102));
        jLabel92.setText("Apr: ");

        jLabel91.setBackground(new java.awt.Color(102, 102, 102));
        jLabel91.setText("Crt: ");

        jLabelHp.setBackground(new java.awt.Color(102, 102, 102));
        jLabelHp.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelEsq.setBackground(new java.awt.Color(102, 102, 102));
        jLabelEsq.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelIni.setBackground(new java.awt.Color(102, 102, 102));
        jLabelIni.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelCrt.setBackground(new java.awt.Color(102, 102, 102));
        jLabelCrt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelApr.setBackground(new java.awt.Color(102, 102, 102));
        jLabelApr.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonDistribuirESalvar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDistribuirESalvar.setText("Distribuir e Salvar");
        jButtonDistribuirESalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDistribuirESalvarActionPerformed(evt);
            }
        });

        jLabel94.setText("Pontos para distribuir: ");

        jLabelPontos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPontos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel90.setText("Vel:");

        jButtonDecVel.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecVel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecVel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecVelActionPerformed(evt);
            }
        });

        jLabelVel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelVel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonIncVel.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncVel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncVel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncVelActionPerformed(evt);
            }
        });

        jLabelCdn.setBackground(new java.awt.Color(102, 102, 102));
        jLabelCdn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabelCdn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelCdnMouseEntered(evt);
            }
        });

        jLabel42.setBackground(new java.awt.Color(102, 102, 102));
        jLabel42.setText("Cdn: ");
        jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel42MouseEntered(evt);
            }
        });

        jLabel54.setBackground(new java.awt.Color(102, 102, 102));
        jLabel54.setText("Nen: ");

        jLabelLvlNen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelLvlNen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelExpNen.setBackground(new java.awt.Color(102, 102, 102));
        jLabelExpNen.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabelExpNen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelExpNenMouseEntered(evt);
            }
        });

        jLabel55.setBackground(new java.awt.Color(102, 102, 102));
        jLabel55.setText("Exp: ");
        jLabel55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel55MouseEntered(evt);
            }
        });

        jLabel93.setBackground(new java.awt.Color(102, 102, 102));
        jLabel93.setText("MP: ");
        jLabel93.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel93MouseEntered(evt);
            }
        });

        jLabelMop.setBackground(new java.awt.Color(102, 102, 102));
        jLabelMop.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabelMop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelMopMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel94)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPontos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel90)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDecVel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabelVel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jButtonIncVel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel55)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelExpNen, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel93, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabelExp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel54)
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabelLvlNen, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel87, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelEsq, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(jLabelHp, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(jLabelIni, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(jLabelMop, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel91, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel92, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelApr, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCrt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabelRen, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel51, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel58, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelIntIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDexIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelConIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelCarIni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelMenIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelForIni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonDecMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDecCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDecInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDecDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDecCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDecFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel64, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValDex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValCon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValFor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValMen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonIncMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIncCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIncInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIncDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIncCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIncFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel75, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelModInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelModDex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelModCon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelModCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelModFor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelModMen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel67, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelBInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelBDex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelBCon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelBCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelBMen, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelBFor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel81, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelPerInt, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelPerDex, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelPerCon, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelPerCar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelPerFor, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelPerMen, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jButtonDistribuirESalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelExp, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel41)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabelCrt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel91))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel92))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabelApr, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelCdn, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelLvlNen, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelIni, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel88, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelEsq, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel87, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelHp, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelRen, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelExpNen, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel93, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelMop, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel90, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelPontos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel94, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonDecVel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelVel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButtonIncVel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelForIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelConIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDexIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelIntIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCarIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMenIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabelValFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelValCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelValDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelValInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelValCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelValMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButtonDecFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDecCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDecDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDecInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDecCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDecMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButtonIncFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonIncCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonIncDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonIncInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonIncCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonIncMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelBMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerFor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerDex, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerInt, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerCar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPerMen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonDistribuirESalvar))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCalcular))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        jScrollPane1.setViewportView(jPanel1);

        jMenu1.setText("Arquivo");

        jMenuItem14.setText("Gerar Ficha");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jMenuItem2.setText("Editar Personagem");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItem4.setText("Abrir Personagem");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem3.setText("Exportar ficha.dat");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem5.setText("Atualizar Campos");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem11.setText("Abrir Habilidades");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jMenuItem12.setText("Abrir Trainer");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem12);

        jMenuItem7.setText("Duplicar Ficha");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItemIntegrarFicha.setText("Integrar Ficha");
        jMenuItemIntegrarFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemIntegrarFichaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemIntegrarFicha);

        jMenuItem8.setText("Deletar Ficha");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem1.setText("Fechar Gerador");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem10.setText("Breve Descrição");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jMenuItem9.setText("Descrição");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem6.setText("Inventário");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem13.setText("Corrigir Pontos");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void calcular() {
        // controlando nomes repetidos
        String nomePer = jTextFieldNick.getText().toUpperCase();
        if (AlgoritmoPrincipal.containsFicha(nomePer)) {
            JOptionPane.showMessageDialog(null, "Já existe um personagem com esse nome!",
                    "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (nomePer.equals("NULL") || nomePer.equals("NOVO")) {
            JOptionPane.showMessageDialog(null, "Esse nome não é válido!",
                    "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // instanciando uma ficha
        Ficha ficha = new Ficha();
        
        // setando formulario do personagem
        ficha.setNome(jTextFieldName.getText());
        ficha.setNick(jTextFieldNick.getText().toUpperCase());
        try {
            ficha.setIdade(Integer.parseInt(jTextFieldIdade.getText()));
        } catch (NumberFormatException e) {
            ficha.setIdade(0);
        }
        ficha.setAltura(getDouble(jTextFieldAltura.getText()));
        ficha.setPeso(getDouble(jTextFieldPeso.getText()));
        
        ficha.setClasse(jComboBoxClasse.getSelectedItem().toString());
        ficha.setSortePorLvl(Classes.get(ficha.getClasse()).isSortePorLvl());
        ficha.setNen(jComboBoxNen.getSelectedItem().toString());
        ficha.setTendencia(jComboBoxTendencia.getSelectedItem().toString());
        ficha.setHunter((jComboBoxHunter.getSelectedItem().toString()));
        ficha.setPersonagemDeJogador(jCheckBoxPersonagemDeJogador.isSelected());
        ficha.setCriaturaDoMestre(jCheckBoxCriaturaDoMestre.isSelected());
        
        ficha.setLvl(Integer.parseInt(jTextFieldLvInicial.getText()));
        ficha.setExp(Integer.parseInt(jTextFieldExpInicial.getText()));
        ficha.setExpBonus(Integer.parseInt(jTextFieldExpBonus.getText()));
        
        // setando atributos de nen
        ficha.setAtrRef(Integer.parseInt(jTextFieldRef.getText()));
        ficha.setAtrEms(Integer.parseInt(jTextFieldEms.getText()));
        ficha.setAtrMat(Integer.parseInt(jTextFieldMat.getText()));
        ficha.setAtrMan(Integer.parseInt(jTextFieldMan.getText()));
        ficha.setAtrTrs(Integer.parseInt(jTextFieldTrs.getText()));
        ficha.setAtrEsp(Integer.parseInt(jTextFieldEsp.getText()));
        ficha.setAtrCdn(Integer.parseInt(jTextFieldCdn.getText()));
        ficha.setTen(Integer.parseInt(jTextFieldTen.getText()));
        ficha.setRyu(Integer.parseInt(jTextFieldRyu.getText()));
        ficha.setAop(Integer.parseInt(jTextFieldAop.getText()));
        ficha.setMop(Integer.parseInt(jTextFieldMop.getText()));
        ficha.setZts(Integer.parseInt(jTextFieldZts.getText()));
        ficha.setEn(Integer.parseInt(jTextFieldEn.getText()));
        
        // setando atributos iniciais
        ficha.setIniFor(Integer.parseInt(jTextFieldFor.getText()));
        ficha.setIniCon(Integer.parseInt(jTextFieldCon.getText()));
        ficha.setIniDex(Integer.parseInt(jTextFieldDex.getText()));
        ficha.setIniInt(Integer.parseInt(jTextFieldInt.getText()));
        ficha.setIniCar(Integer.parseInt(jTextFieldCar.getText()));
        ficha.setIniMen(Integer.parseInt(jTextFieldMen.getText()));
        
        // setando valores de atributos
        ficha.setValFor(Integer.parseInt(jTextFieldFor.getText()));
        ficha.setValCon(Integer.parseInt(jTextFieldCon.getText()));
        ficha.setValDex(Integer.parseInt(jTextFieldDex.getText()));
        ficha.setValInt(Integer.parseInt(jTextFieldInt.getText()));
        ficha.setValCar(Integer.parseInt(jTextFieldCar.getText()));
        ficha.setValMen(Integer.parseInt(jTextFieldMen.getText()));
        
        // setando proficiencias treinadas
        ficha.setProIni(Integer.parseInt(jTextFieldIni.getText()) + Classes.get(ficha.getClasse()).getbIni());
        ficha.setProEsq(Integer.parseInt(jTextFieldEsq.getText()) + Classes.get(ficha.getClasse()).getbEsq());
        ficha.setProVel(Integer.parseInt(jTextFieldVel.getText()) + Classes.get(ficha.getClasse()).getbVel());
        
        // setando coeficiente de hp
        ficha.setCoefHp(ficha.getCoefHp() + Classes.get(ficha.getClasse()).getbHp() + (ficha.getIniCon() - 10) / 10);
        
        // setando bonus de acordo com a classe
        Classe classe = Classes.get(ficha.getClasse());
        if (classe == null) {
            return;
        }
        ficha.setbFor(Classes.get(ficha.getClasse()).getbFor());
        ficha.setbDex(Classes.get(ficha.getClasse()).getbDex());
        ficha.setbCon(Classes.get(ficha.getClasse()).getbCon());
        ficha.setbInt(Classes.get(ficha.getClasse()).getbInt());
        ficha.setbCar(Classes.get(ficha.getClasse()).getbCar());
        ficha.setbMen(Classes.get(ficha.getClasse()).getbMen());
        for (String pro : Classes.get(ficha.getClasse()).proKeySet()) {
            // ignorando proficiencias já setadas (proficiencias treinadas)
            if (pro.equals("INI") || pro.equals("ESQ") || pro.equals("VEL")) {
                continue;
            }
            // setando proficiencias
            try {
                // se a ficha já tiver a proficiencia, seu lvl é setado
                ficha.getPro().get(pro).setLvl(Classes.get(ficha.getClasse()).getbPro(pro));
            } catch (NullPointerException e) {
                // se a ficha não tiver a proficiencia, ela é criada e inserida
                LvlBonus lb = new LvlBonus();
                lb.setLvl(Classes.get(ficha.getClasse()).getbPro(pro));
                ficha.getPro().put(pro, lb);
            }
        }
//        ficha.setProHp(Classes.get(ficha.getClasse()).getbHp());
//        ficha.setProApr(Classes.get(ficha.getClasse()).getbApr());
//        ficha.setProCrt(Classes.get(ficha.getClasse()).getbCrt());
        

        // determinando e setando modClass
        switch (ficha.getNen()) {
            case "Reforco":
                ficha.setModClas(1);
                break;
            case "Emissao":
            case "Transformacao":
                ficha.setModClas(0.8);
                break;
            case "Manipulacao":
            case "Materializacao":
                ficha.setModClas(0.6);
                break;
            default: // especialista
                ficha.setModClas(0.4);
                break;
        }
        
        // calculando exp
        int exp = ficha.getExp();
        
        exp += CalculadoraGerador.calculaExp(ficha.getAtrRef());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrEms());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrMat());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrMan());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrTrs());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrEsp());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrCdn());
        exp += CalculadoraGerador.calculaExp(ficha.getRyu());
        exp += CalculadoraGerador.calculaExp(ficha.getTen());
        exp += CalculadoraGerador.calculaExp(ficha.getAop());
        exp += CalculadoraGerador.calculaExp(ficha.getZts());
        exp += CalculadoraGerador.calculaExp(ficha.getEn());
        exp += CalculadoraGerador.calculaExpMop(ficha.getMop());
        
        
        // setando expNen
        int expNen = exp - ficha.getExp();
        
        // setando na ficha
        ficha.setExpNen(expNen);
        
        // Incrementando Exp Das Proficiencias Treinadas
        // o uso de lvlBase nos 3 algoritmos abaixo serve para a exp calculada
        // considerar os últimos níveis treinados ao invés dos primeiros
        int lvlBase;
        // iniciativa
        try {
            lvlBase = Classes.get(ficha.getClasse()).getbIni();
            for (int i = 1 + lvlBase; i <= ficha.getProIni(); i++) {
                exp += i * 100;
            }
        } catch (NumberFormatException e) { }
        
        // esquiva
        try {
            lvlBase = Classes.get(ficha.getClasse()).getbEsq();
            for (int i = 1 + lvlBase; i <= ficha.getProEsq(); i++) {
                exp += i * 100;
            }
        } catch (NumberFormatException e) { }
        
        // velocidade
        try {
            lvlBase = Classes.get(ficha.getClasse()).getbVel();
            for (int i = 1 + lvlBase; i <= ficha.getProVel(); i++) {
                exp += i * 100;
            }
        } catch (NumberFormatException e) { }
        
        // multiplicando a exp pela exp bonus
        System.out.println("Exp sem bonus " + exp);
        exp *= (1.0 + (double) ficha.getExpBonus() / 100.0);
        System.out.println("Exp com bonus " + exp);
        
        // calculando lvl
        int i;
        
        for (i = ficha.getLvl(); exp >= 0; i++) {
            exp -= AlgoritmoPrincipalGerador.getEXP_LVL(i + 1);
        }
        
        // o usuario decidira se o personagem ganha mais um nivel ou se ele fica com a exp
        switch (JOptionPane.showConfirmDialog(null, "Somar mais um lvl e zerar exp?",
                "Criando personagem...", JOptionPane.YES_NO_OPTION)) {

            case JOptionPane.YES_OPTION: 
                exp = 0;
                break;
            case JOptionPane.NO_OPTION:
                i--;
                exp += AlgoritmoPrincipalGerador.getEXP_LVL(i + 1);
                break;
        }
        // setando lvl e exp em ficha
        CalculadoraGerador.setPontos(i - 1/* - ficha.getLvl()*/);
        ficha.setLvl(i);
        ficha.setExp(exp);
        
        // calculando lvl nen
        for (i = ficha.getLvlNen(); expNen >= 0; i++) {
            expNen -= AlgoritmoPrincipalGerador.getLVL_NEN(i + 1);
        }
        i--;
        expNen += AlgoritmoPrincipalGerador.getLVL_NEN(i + 1);
        // setando lvlNen e expNen em ficha
        ficha.setLvlNen(i);
        ficha.setExpNen(expNen);
        
        // primeiro os modificadores devem ser setados para que depois sejam setadas as pericias
        // setando modificadores de atributos em ficha
        ficha.setModCar();
        ficha.setModFor();
        ficha.setModCon();
        ficha.setModDex();
        ficha.setModMen();
        ficha.setModInt();
        
        // setando bonus de atributos em ficha
        ficha.setbCar();
        ficha.setbFor();
        ficha.setbCon();
        ficha.setbDex();
        ficha.setbMen();
        ficha.setbInt();
        
        // setando pericias de atributos em ficha
        ficha.setPerCar();
        ficha.setPerFor();
        ficha.setPerCon();
        ficha.setPerDex();
        ficha.setPerMen();
        ficha.setPerInt();
        
        // setando outros valores
        ficha.setIni();
        ficha.setEsq();
        ficha.setCrt();
        ficha.setApr();
        ficha.setVel();
        ficha.setHp();
        
        
        // setando cdn
        ficha.setModCdn();
        ficha.setbIntCdn();
        
        // setando ficha construida
        AlgoritmoPrincipalGerador.setFicha(ficha);
        
        // isso deve estar abaixo de "setando ficha construida"
        // distribuindo pontos bonus de pericia de classe (se tiver)
        if (Classes.get(ficha.getClasse()).getSizeBLivre() > 0) {
            new View_bonusLivre(null, true).setVisible(true);
        }
        
        if (Classes.get(ficha.getClasse()).getbProLivre() != 0) {
            new View_nomePro(null, true).setVisible(true);
        }
        
        liberar();
    }
    
    private void recalcular() {
        // lendo o nome do personagem
        Ficha ficha;
        String nomePer = jTextFieldNick.getText().toUpperCase();
        // retorna true se atacante for um nome valido
        if (AlgoritmoPrincipal.containsFicha(nomePer)) {
            ficha = AlgoritmoPrincipal.getFicha(nomePer);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome",
                    "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // setando formulario do personagem
        ficha.setNome(jTextFieldName.getText());
        ficha.setNick(jTextFieldNick.getText().toUpperCase());
        try {
            ficha.setIdade(Integer.parseInt(jTextFieldIdade.getText()));
        } catch (NumberFormatException e) {
            ficha.setIdade(0);
        }
        ficha.setAltura(getDouble(jTextFieldAltura.getText()));
        ficha.setPeso(getDouble(jTextFieldPeso.getText()));
        
        ficha.setClasse(jComboBoxClasse.getSelectedItem().toString());
        ficha.setSortePorLvl(Classes.get(ficha.getClasse()).isSortePorLvl());
        ficha.setNen(jComboBoxNen.getSelectedItem().toString());
        ficha.setTendencia(jComboBoxTendencia.getSelectedItem().toString());
        ficha.setHunter((jComboBoxHunter.getSelectedItem().toString()));
        ficha.setPersonagemDeJogador(jCheckBoxPersonagemDeJogador.isSelected());
        ficha.setCriaturaDoMestre(jCheckBoxCriaturaDoMestre.isSelected());
        
        ficha.setLvl(Integer.parseInt(jTextFieldLvInicial.getText()));
        ficha.setExp(Integer.parseInt(jTextFieldExpInicial.getText()));
        ficha.setExpBonus(Integer.parseInt(jTextFieldExpBonus.getText()));
        
        // setando atributos de nen
        ficha.setAtrRef(Integer.parseInt(jTextFieldRef.getText()));
        ficha.setAtrEms(Integer.parseInt(jTextFieldEms.getText()));
        ficha.setAtrMat(Integer.parseInt(jTextFieldMat.getText()));
        ficha.setAtrMan(Integer.parseInt(jTextFieldMan.getText()));
        ficha.setAtrTrs(Integer.parseInt(jTextFieldTrs.getText()));
        ficha.setAtrEsp(Integer.parseInt(jTextFieldEsp.getText()));
        ficha.setAtrCdn(Integer.parseInt(jTextFieldCdn.getText()));
        ficha.setTen(Integer.parseInt(jTextFieldTen.getText()));
        ficha.setRyu(Integer.parseInt(jTextFieldRyu.getText()));
        ficha.setAop(Integer.parseInt(jTextFieldAop.getText()));
        ficha.setMop(Integer.parseInt(jTextFieldMop.getText()));
        ficha.setZts(Integer.parseInt(jTextFieldZts.getText()));
        ficha.setEn(Integer.parseInt(jTextFieldEn.getText()));
        
        // setando atributos iniciais
        ficha.setIniFor(Integer.parseInt(jTextFieldFor.getText()));
        ficha.setIniCon(Integer.parseInt(jTextFieldCon.getText()));
        ficha.setIniDex(Integer.parseInt(jTextFieldDex.getText()));
        ficha.setIniInt(Integer.parseInt(jTextFieldInt.getText()));
        ficha.setIniCar(Integer.parseInt(jTextFieldCar.getText()));
        ficha.setIniMen(Integer.parseInt(jTextFieldMen.getText()));
        
        // setando valores de atributos
        ficha.setValFor(Integer.parseInt(jTextFieldFor.getText()));
        ficha.setValCon(Integer.parseInt(jTextFieldCon.getText()));
        ficha.setValDex(Integer.parseInt(jTextFieldDex.getText()));
        ficha.setValInt(Integer.parseInt(jTextFieldInt.getText()));
        ficha.setValCar(Integer.parseInt(jTextFieldCar.getText()));
        ficha.setValMen(Integer.parseInt(jTextFieldMen.getText()));
        
        // setando pericias treinadas
        ficha.setProIni(Integer.parseInt(jTextFieldIni.getText()) + Classes.get(ficha.getClasse()).getbIni());
        ficha.setProEsq(Integer.parseInt(jTextFieldEsq.getText()) + Classes.get(ficha.getClasse()).getbEsq());
        ficha.setProVel(Integer.parseInt(jTextFieldVel.getText()) + Classes.get(ficha.getClasse()).getbVel());
        
        // setando coeficiente de hp
        ficha.setCoefHp(ficha.getCoefHp() + Classes.get(ficha.getClasse()).getbHp() + (ficha.getIniCon() - 10) / 10);
        
        // setando bonus de acordo com a classe
        Classe classe = Classes.get(ficha.getClasse());
        if (classe == null) {
            return;
        }
        ficha.setbFor(Classes.get(ficha.getClasse()).getbFor());
        ficha.setbDex(Classes.get(ficha.getClasse()).getbDex());
        ficha.setbCon(Classes.get(ficha.getClasse()).getbCon());
        ficha.setbInt(Classes.get(ficha.getClasse()).getbInt());
        ficha.setbCar(Classes.get(ficha.getClasse()).getbCar());
        ficha.setbMen(Classes.get(ficha.getClasse()).getbMen());
        ficha.setProHp(Classes.get(ficha.getClasse()).getbHp());
        ficha.setProApr(Classes.get(ficha.getClasse()).getbApr());
        ficha.setProCrt(Classes.get(ficha.getClasse()).getbCrt());

        // determinando e setando modClass
        switch (ficha.getNen()) {
            case "Reforco":
                ficha.setModClas(1);
                break;
            case "Emissao":
            case "Transformacao":
                ficha.setModClas(0.8);
                break;
            case "Manipulacao":
            case "Materializacao":
                ficha.setModClas(0.6);
                break;
            default: // especialista
                ficha.setModClas(0.4);
                break;
        }
        
        // calculando exp
        int exp = ficha.getExp();
        
        exp += CalculadoraGerador.calculaExp(ficha.getAtrRef());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrEms());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrMat());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrMan());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrTrs());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrEsp());
        exp += CalculadoraGerador.calculaExp(ficha.getAtrCdn());
        exp += CalculadoraGerador.calculaExp(ficha.getRyu());
        exp += CalculadoraGerador.calculaExp(ficha.getTen());
        exp += CalculadoraGerador.calculaExp(ficha.getAop());
        exp += CalculadoraGerador.calculaExp(ficha.getZts());
        exp += CalculadoraGerador.calculaExp(ficha.getEn());
        exp += CalculadoraGerador.calculaExpMop(ficha.getMop());
        
        
        // setando expNen
        int expNen = exp - ficha.getExp();
        
        // setando na ficha
        ficha.setExpNen(expNen);
        
        // incrementando exp das proficiencias treinadas
        // iniciativa
        try {
            for (int i = 1; i <= Integer.parseInt(jTextFieldIni.getText()); i++) {
                exp += i * 100;
            }
        } catch (NumberFormatException e) {
            // nao faz nada
        }
        
        // esquiva
        try {
            for (int i = 1; i <= Integer.parseInt(jTextFieldEsq.getText()); i++) {
                exp += i * 100;
            }
        } catch (NumberFormatException e) {
            // nao faz nada
        }
        
        // iniciativa
        try {
            for (int i = 1; i <= Integer.parseInt(jTextFieldVel.getText()); i++) {
                exp += i * 100;
            }
        } catch (NumberFormatException e) {
            // nao faz nada
        }
        
        // multiplicando a exp pela exp bonus
        System.out.println("Exp sem bonus " + exp);
        exp *= (1.0 + (double) ficha.getExpBonus() / 100.0);
        System.out.println("Exp com bonus " + exp);
        
        // calculando lvl
        int i;
        
        for (i = ficha.getLvl()/*AlgoritmoPrincipalGerador.getLVL_INICIAL()*/; exp >= 0; i++) {
            exp -= AlgoritmoPrincipalGerador.getEXP_LVL(i + 1);
        }
        
        // o usuario decidira se o personagem ganha mais um nivel ou se ele fica com a exp
        switch (JOptionPane.showConfirmDialog(null, "Somar mais um lvl e zerar exp?",
                "Criando personagem...", JOptionPane.YES_NO_OPTION)) {

            case 0:
                exp = 0;
                break;
            case 1:
                i--;
                exp += AlgoritmoPrincipalGerador.getEXP_LVL(i + 1);
                break;
        }
        // setando lvl e exp em ficha
        CalculadoraGerador.setPontos(i - 1 /*ficha.getLvl()*/);
        ficha.setLvl(i);
        ficha.setExp(exp);
        
        // calculando lvl nen
        for (i = 0; expNen >= 0; i++) {
            expNen -= AlgoritmoPrincipalGerador.getLVL_NEN(i + 1);
        }
        i--;
        expNen += AlgoritmoPrincipalGerador.getLVL_NEN(i + 1);
        // setando lvlNen e expNen em ficha
        ficha.setLvlNen(i);
        ficha.setExpNen(expNen);
        
        // primeiro os modificadores devem ser setados para que depois sejam setadas as pericias
        // setando modificadores de atributos em ficha
        ficha.setModCar();
        ficha.setModFor();
        ficha.setModCon();
        ficha.setModDex();
        ficha.setModMen();
        ficha.setModInt();
        
        // setando bonus de atributos em ficha
        ficha.setbCar();
        ficha.setbFor();
        ficha.setbCon();
        ficha.setbDex();
        ficha.setbMen();
        ficha.setbInt();
        
        // setando pericias de atributos em ficha
        ficha.setPerCar();
        ficha.setPerFor();
        ficha.setPerCon();
        ficha.setPerDex();
        ficha.setPerMen();
        ficha.setPerInt();
        
        // setando outros valores
        ficha.setIni();
        ficha.setEsq();
        ficha.setCrt();
        ficha.setApr();
        ficha.setVel();
        ficha.setHp();
        
        // setando cdn
        ficha.setModCdn();
        ficha.setbIntCdn();
        
        // setando ficha construida
        AlgoritmoPrincipalGerador.setFicha(ficha);

        // isso deve estar abaixo de "setando ficha construida"
        // distribuindo pontos bonus de pericia de classe (se tiver)
        if (Classes.get(ficha.getClasse()).getSizeBLivre() > 0) {
            new View_bonusLivre(null, true).setVisible(true);
        }
        
        if (Classes.get(ficha.getClasse()).getbProLivre() != 0) {
            new View_nomePro(null, true).setVisible(true);
        }
        
        liberar();
    }
    
    private void liberar() {
        Ficha ficha = AlgoritmoPrincipalGerador.getFicha();

        // habilitando jButtons
        habilitarDadosCalculados(true);
        
        // recalculando dados possivelmente alterados
        // setando pericias de atributos em ficha
        ficha.setPerCar();
        ficha.setPerFor();
        ficha.setPerCon();
        ficha.setPerDex();
        ficha.setPerMen();
        ficha.setPerInt();
        // setando outros valores
        ficha.setIni();
        ficha.setEsq();
        ficha.setCrt();
        ficha.setApr();
        ficha.setVel();
        ficha.setHp();
        ficha.setbIntCdn();
        
        // salvando dados recalculados
        AlgoritmoPrincipalGerador.setFicha(ficha);
        
        // setando dados calculados
        setarDadosCalculados(ficha);
    }
    
    private void jButtonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularActionPerformed
        switch (AlgoritmoPrincipalGerador.getjButton()) {
            case 0:
                calcular();
                break;
            case 2:
                recalcular();
                break;
        }
    }//GEN-LAST:event_jButtonCalcularActionPerformed

    // calcula novos valores de bonus
    private int calculaBonus(int bLv, int bFor, int valAtual, boolean valIncrementado) {
        /*
        int modAnterior;
        if (valIncrementado) {
            modAnterior = (valAtual - 1) / 2;
        } else {
            modAnterior = (valAtual + 1) / 2;
        }
        int modAtual = valAtual / 2;
        int perAnterior = modAnterior + bLv + bFor;
        int perAtual = modAtual + bLv + bFor;
        return ((perAtual - 10) / 10) - ((perAnterior - 10) / 10);
        */
        int valAnterior;
        if (valIncrementado) {
            valAnterior = valAtual - 1;
        } else {
            valAnterior = valAtual + 1;
        }
        return ((valAtual - 10) / 10) - ((valAnterior - 10) / 10);
    }
    
    private void jButtonDecVelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecVelActionPerformed
        if (Integer.parseInt(jLabelVel.getText()) - 1 < AlgoritmoPrincipalGerador.getFicha().getVel()) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Velocidade para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        CalculadoraGerador.incrementarPontos();
        jLabelVel.setText(String.valueOf(Integer.parseInt(jLabelVel.getText()) - 1));
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecVelActionPerformed

    private void jButtonIncVelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncVelActionPerformed
        CalculadoraGerador.decrementarPontos();
        jLabelVel.setText(String.valueOf(Integer.parseInt(jLabelVel.getText()) + 1));
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncVelActionPerformed

    private void jButtonDecForActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecForActionPerformed
        if (Integer.parseInt(jLabelValFor.getText()) - 1 < Integer.parseInt(jLabelForIni.getText())) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Força para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int val = Integer.parseInt(jLabelValFor.getText()) - 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bFor = AlgoritmoPrincipalGerador.getFicha().getbFor();
        int per = mod + bLv + bFor;
        
        jLabelModFor.setText(String.valueOf(mod));
        jLabelPerFor.setText(String.valueOf(per));
        jLabelValFor.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bFor, val, false);
        if (bonus != 0) {
            // setando em vel da ficha o valor de vel + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setVel(AlgoritmoPrincipalGerador.getFicha().getVel() + bonus);
            // setando em labelVel o valor de labelVel + bonus(que pode ser >0 ou <0)
            jLabelVel.setText(String.valueOf(Integer.parseInt(jLabelVel.getText()) + bonus));
        }
        
        CalculadoraGerador.incrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecForActionPerformed

    private void jButtonIncForActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncForActionPerformed
        int val = Integer.parseInt(jLabelValFor.getText()) + 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bFor = AlgoritmoPrincipalGerador.getFicha().getbFor();
        int per = mod + bLv + bFor;
        
        jLabelModFor.setText(String.valueOf(mod));
        jLabelPerFor.setText(String.valueOf(per));
        jLabelValFor.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bFor, val, true);
        if (bonus != 0) {
            // setando em vel da ficha o valor de vel + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setVel(AlgoritmoPrincipalGerador.getFicha().getVel() + bonus);
            // setando em labelVel o valor de labelVel + bonus(que pode ser >0 ou <0)
            jLabelVel.setText(String.valueOf(Integer.parseInt(jLabelVel.getText()) + bonus));
        }
        
        CalculadoraGerador.decrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncForActionPerformed

    private void jButtonDecConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecConActionPerformed
        if (Integer.parseInt(jLabelValCon.getText()) - 1 < Integer.parseInt(jLabelConIni.getText())) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Constituição para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int val = Integer.parseInt(jLabelValCon.getText()) - 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bCon = AlgoritmoPrincipalGerador.getFicha().getbCon();
        int per = mod + bLv + bCon;
        
        jLabelModCon.setText(String.valueOf(mod));
        jLabelPerCon.setText(String.valueOf(per));
        jLabelValCon.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bCon, val, false);
        // nao tem if, pois o hp sempre muda
        int coefHp = AlgoritmoPrincipalGerador.getFicha().getCoefHp() + bonus;
        int lvl = AlgoritmoPrincipalGerador.getFicha().getLvl();
        int hp = coefHp * lvl + val + Ficha.getHP_INICIAL();
        // setando em coefHp da ficha o valor de coefHp + bonus(que pode ser >0 ou <0)
        AlgoritmoPrincipalGerador.getFicha().setCoefHp(coefHp);
        // setando em labelHp o novo valor de hp
        jLabelHp.setText(String.valueOf(hp));
        
        CalculadoraGerador.incrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecConActionPerformed

    private void jButtonIncConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncConActionPerformed
        int val = Integer.parseInt(jLabelValCon.getText()) + 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bCon = AlgoritmoPrincipalGerador.getFicha().getbCon();
        int per = mod + bLv + bCon;
        
        jLabelModCon.setText(String.valueOf(mod));
        jLabelPerCon.setText(String.valueOf(per));
        jLabelValCon.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bCon, val, true);
        // nao tem if, pois o hp sempre muda
        int coefHp = AlgoritmoPrincipalGerador.getFicha().getCoefHp() + bonus;
        int lvl = AlgoritmoPrincipalGerador.getFicha().getLvl();
        int hp = coefHp * lvl + val + Ficha.getHP_INICIAL();
        // setando em coefHp da ficha o valor de coefHp + bonus(que pode ser >0 ou <0)
        AlgoritmoPrincipalGerador.getFicha().setCoefHp(coefHp);
        // setando em labelHp o novo valor de hp
        jLabelHp.setText(String.valueOf(hp));
        
        CalculadoraGerador.decrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncConActionPerformed

    private void jButtonDecDexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecDexActionPerformed
        if (Integer.parseInt(jLabelValDex.getText()) - 1 < Integer.parseInt(jLabelDexIni.getText())) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Destreza para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Ficha ficha = AlgoritmoPrincipalGerador.getFicha();
        int val = Integer.parseInt(jLabelValDex.getText()) - 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bDex = AlgoritmoPrincipalGerador.getFicha().getbDex();
        int per = mod + bLv + bDex;

        jLabelModDex.setText(String.valueOf(mod));
        jLabelPerDex.setText(String.valueOf(per));
        jLabelValDex.setText(String.valueOf(val));
        jLabelEsq.setText(String.valueOf(per + Ficha.getESQ_INICIAL() + ficha.getProEsq()));
        jLabelIni.setText(String.valueOf(per + ficha.getProIni()));
        
        // bonus
        int bonus = calculaBonus(bLv, bDex, val, false);
        if (bonus != 0) {
            // setando em crt da ficha o valor de crt + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setCrt(AlgoritmoPrincipalGerador.getFicha().getCrt() + bonus);
            // setando em labelCrt o valor de labelCrt + bonus(que pode ser >0 ou <0)
            // - bonus, pois se o personagem ganhar critico, então o critico passa a ser 20 - bonus
            jLabelCrt.setText(String.valueOf(Integer.parseInt(jLabelCrt.getText()) - bonus));
        }
        
        CalculadoraGerador.incrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecDexActionPerformed

    private void jButtonIncDexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncDexActionPerformed
        Ficha ficha = AlgoritmoPrincipalGerador.getFicha();
        int val = Integer.parseInt(jLabelValDex.getText()) + 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bDex = AlgoritmoPrincipalGerador.getFicha().getbDex();
        int per = mod + bLv + bDex;
        
        jLabelModDex.setText(String.valueOf(mod));
        jLabelPerDex.setText(String.valueOf(per));
        jLabelValDex.setText(String.valueOf(val));
        jLabelEsq.setText(String.valueOf(per + Ficha.getESQ_INICIAL() + ficha.getProEsq()));
        jLabelIni.setText(String.valueOf(per + ficha.getProIni()));
        
        // bonus
        int bonus = calculaBonus(bLv, bDex, val, true);
        if (bonus != 0) {
            // setando em crt da ficha o valor de crt + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setCrt(AlgoritmoPrincipalGerador.getFicha().getCrt() + bonus);
            // setando em labelCrt o valor de labelCrt + bonus(que pode ser >0 ou <0)
            // - bonus, pois se o personagem ganhar critico, então o critico passa a ser 20 - bonus
            jLabelCrt.setText(String.valueOf(Integer.parseInt(jLabelCrt.getText()) - bonus));
        }
        
        CalculadoraGerador.decrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncDexActionPerformed

    private void jButtonDecIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecIntActionPerformed
        if (Integer.parseInt(jLabelValInt.getText()) - 1 < Integer.parseInt(jLabelIntIni.getText())) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Inteligência para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int val = Integer.parseInt(jLabelValInt.getText()) - 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bInt = AlgoritmoPrincipalGerador.getFicha().getbInt();
        int per = mod + bLv + bInt;
        
        jLabelModInt.setText(String.valueOf(mod));
        jLabelPerInt.setText(String.valueOf(per));
        jLabelValInt.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bInt, val, false);
        if (bonus != 0) {
            // setando em cdn da ficha o valor de cdn + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setbIntCdn(AlgoritmoPrincipalGerador.getFicha().getbIntCdn() + bonus);
            // setando em labelCdn o valor de labelCdn + bonus(que pode ser >0 ou <0)
            jLabelCdn.setText(String.valueOf(Integer.parseInt(jLabelCdn.getText()) + bonus));
        }
        
        CalculadoraGerador.incrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecIntActionPerformed

    private void jButtonIncIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncIntActionPerformed
        int val = Integer.parseInt(jLabelValInt.getText()) + 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bInt = AlgoritmoPrincipalGerador.getFicha().getbInt();
        int per = mod + bLv + bInt;
        
        jLabelModInt.setText(String.valueOf(mod));
        jLabelPerInt.setText(String.valueOf(per));
        jLabelValInt.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bInt, val, true);
        if (bonus != 0) {
            // setando em cdn da ficha o valor de cdn + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setbIntCdn(AlgoritmoPrincipalGerador.getFicha().getbIntCdn() + bonus);
            // setando em labelCdn o valor de labelCdn + bonus(que pode ser >0 ou <0)
            jLabelCdn.setText(String.valueOf(Integer.parseInt(jLabelCdn.getText()) + bonus));
        }
        
        CalculadoraGerador.decrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncIntActionPerformed

    private void jButtonDecCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecCarActionPerformed
        if (Integer.parseInt(jLabelValCar.getText()) - 1 < Integer.parseInt(jLabelCarIni.getText())) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Carisma para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int val = Integer.parseInt(jLabelValCar.getText()) - 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bCar = AlgoritmoPrincipalGerador.getFicha().getbCar();
        int per = mod + bLv + bCar;
        
        jLabelModCar.setText(String.valueOf(mod));
        jLabelPerCar.setText(String.valueOf(per));
        jLabelValCar.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bCar, val, false);
        if (bonus != 0) {
            // setando em apr da ficha o valor de apr + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setApr(AlgoritmoPrincipalGerador.getFicha().getApr() + bonus);
            // setando em labelApr o valor de labelApr + bonus(que pode ser >0 ou <0)
            jLabelApr.setText(String.valueOf(Integer.parseInt(jLabelApr.getText()) + bonus));
        }
        
        CalculadoraGerador.incrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecCarActionPerformed

    private void jButtonIncCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncCarActionPerformed
        int val = Integer.parseInt(jLabelValCar.getText()) + 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bCar = AlgoritmoPrincipalGerador.getFicha().getbCar();
        int per = mod + bLv + bCar;
        
        jLabelModCar.setText(String.valueOf(mod));
        jLabelPerCar.setText(String.valueOf(per));
        jLabelValCar.setText(String.valueOf(val));
        
        // bonus
        int bonus = calculaBonus(bLv, bCar, val, true);
        if (bonus != 0) {
            // setando em apr da ficha o valor de apr + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipalGerador.getFicha().setApr(AlgoritmoPrincipalGerador.getFicha().getApr() + bonus);
            // setando em labelApr o valor de labelApr + bonus(que pode ser >0 ou <0)
            jLabelApr.setText(String.valueOf(Integer.parseInt(jLabelApr.getText()) + bonus));
        }
        
        CalculadoraGerador.decrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncCarActionPerformed

    private void jButtonDecMenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecMenActionPerformed
        if (Integer.parseInt(jLabelValMen.getText()) - 1 < Integer.parseInt(jLabelMenIni.getText())) {
            JOptionPane.showMessageDialog(null, "Você NÃO PODE reduzir o valor de Mentais para menor que a inicial!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int val = Integer.parseInt(jLabelValMen.getText()) - 1;
        int mod = (val - 10) / 2;
        int bLv = AlgoritmoPrincipalGerador.getFicha().getLvl() / 2; // bLv é o bonus do lv
        int bMen = AlgoritmoPrincipalGerador.getFicha().getbMen();
        int per = mod + bLv + bMen;
        
        jLabelModMen.setText(String.valueOf(mod));
        jLabelPerMen.setText(String.valueOf(per));
        jLabelValMen.setText(String.valueOf(val));
        
        // bonus
        /*int bonus = calculaBonus(bLv, bMen, val, false);
        if (bonus != 0) {
            // setando em ... da ficha o valor de ... + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipal.getFicha().setApr(AlgoritmoPrincipal.getFicha().getApr() + bonus);
            // setando em labelApr o valor de labelApr + bonus(que pode ser >0 ou <0)
            jLabelApr.setText(String.valueOf(Integer.parseInt(jLabelApr.getText()) + bonus));
        }*/
        
        CalculadoraGerador.incrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonDecMenActionPerformed

    private void jButtonIncMenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncMenActionPerformed
        int val = Integer.parseInt(jLabelValMen.getText()) + 1;
        int mod = (val - 10) / 2;
        int per = mod + AlgoritmoPrincipalGerador.getFicha().getLvl() / 2 + AlgoritmoPrincipalGerador.getFicha().getbMen();
        
        jLabelModMen.setText(String.valueOf(mod));
        jLabelPerMen.setText(String.valueOf(per));
        jLabelValMen.setText(String.valueOf(val));
        
        // bonus
        /*int bonus = calculaBonus(bLv, bMen, val, false);
        if (bonus != 0) {
            // setando em ... da ficha o valor de ... + bonus(que pode ser >0 ou <0)
            AlgoritmoPrincipal.getFicha().setApr(AlgoritmoPrincipal.getFicha().getApr() + bonus);
            // setando em labelApr o valor de labelApr + bonus(que pode ser >0 ou <0)
            jLabelApr.setText(String.valueOf(Integer.parseInt(jLabelApr.getText()) + bonus));
        }*/
        
        CalculadoraGerador.decrementarPontos();
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
    }//GEN-LAST:event_jButtonIncMenActionPerformed
    
    private void limparPainel() {
        jTextFieldNick.setText("");
        jTextFieldName.setText("");
        jTextFieldIdade.setText("");
        jTextFieldAltura.setText("");
        jTextFieldPeso.setText("");
        
        jComboBoxClasse.setSelectedItem(null);
        jComboBoxNen.setSelectedItem(null);
        jComboBoxTendencia.setSelectedItem(null);
        jComboBoxHunter.setSelectedItem(null);
        
        // atribuinto valores padrão às jComboBoxes
        jComboBoxClasse.setSelectedItem("Animal Especial");
        jComboBoxNen.setSelectedItem("Reforco");
        jComboBoxTendencia.setSelectedItem("Lawfull-Good");
        jComboBoxHunter.setSelectedItem("Candidato");
        
        
        jTextFieldLvInicial.setText("3");
        jTextFieldExpInicial.setText("0");
        jTextFieldExpBonus.setText("0");
        
        jTextFieldRef.setText("0");
        jTextFieldEms.setText("0");
        jTextFieldMat.setText("0");
        jTextFieldMan.setText("0");
        jTextFieldTrs.setText("0");
        jTextFieldEsp.setText("0");
        jTextFieldCdn.setText("0");
        jTextFieldTen.setText("0");
        jTextFieldRyu.setText("0");
        jTextFieldZts.setText("0");
        jTextFieldEn.setText("0");
        jTextFieldAop.setText("0");
        jTextFieldMop.setText("1");
        
        jTextFieldFor.setText("");
        jTextFieldCon.setText("");
        jTextFieldDex.setText("");
        jTextFieldInt.setText("");
        jTextFieldCar.setText("");
        jTextFieldMen.setText("");
        
        jTextFieldIni.setText("0");
        jTextFieldEsq.setText("0");
        jTextFieldVel.setText("0");
        
        jLabelLvl.setText("");
        jLabelExp.setText("");
        jLabelLvlNen.setText("");
        jLabelExpNen.setText("");
        jLabelRen.setText("");
        jLabelIni.setText("");
        jLabelEsq.setText("");
        jLabelCrt.setText("");
        jLabelApr.setText("");
        jLabelCdn.setText("");
        jLabelMop.setText("");
        jLabelHp.setText("");
        
        jLabelPontos.setText("");
        jLabelVel.setText("");
        
        jLabelForIni.setText("");
        jLabelDexIni.setText("");
        jLabelConIni.setText("");
        jLabelIntIni.setText("");
        jLabelCarIni.setText("");
        jLabelMenIni.setText("");
        
        jLabelValFor.setText("");
        jLabelValDex.setText("");
        jLabelValCon.setText("");
        jLabelValInt.setText("");
        jLabelValCar.setText("");
        jLabelValMen.setText("");
        
        jLabelModFor.setText("");
        jLabelModDex.setText("");
        jLabelModCon.setText("");
        jLabelModInt.setText("");
        jLabelModCar.setText("");
        jLabelModMen.setText("");
        
        jLabelBFor.setText("");
        jLabelBDex.setText("");
        jLabelBCon.setText("");
        jLabelBInt.setText("");
        jLabelBCar.setText("");
        jLabelBMen.setText("");
        
        jLabelPerFor.setText("");
        jLabelPerDex.setText("");
        jLabelPerCon.setText("");
        jLabelPerInt.setText("");
        jLabelPerCar.setText("");
        jLabelPerMen.setText("");
    }
    
    private void distribuirESalvar() throws IOException, FileNotFoundException, ClassNotFoundException {
        if (CalculadoraGerador.getPontos() != 0) {
            JOptionPane.showMessageDialog(null, "Distribua todos os pontos corretamente!",
                    "Error!", JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        // atualizando dados
//        File folder = new File(algoritmos.batalhas.AlgoritmoPrincipal.getDIR_FICHAS());
//        AlgoritmoPrincipalGerador.loadFichas(folder);
        
        Ficha ficha = AlgoritmoPrincipalGerador.getFicha();
        
        // setando valores de atributos em ficha
        ficha.setValCar(Integer.parseInt(jLabelValCar.getText()));
        ficha.setValFor(Integer.parseInt(jLabelValFor.getText()));
        ficha.setValCon(Integer.parseInt(jLabelValCon.getText()));
        ficha.setValDex(Integer.parseInt(jLabelValDex.getText()));
        ficha.setValInt(Integer.parseInt(jLabelValInt.getText()));
        ficha.setValMen(Integer.parseInt(jLabelValMen.getText()));
        
        // setando modificadores de atributos em ficha
        ficha.setModCar(Integer.parseInt(jLabelModCar.getText()));
        ficha.setModFor(Integer.parseInt(jLabelModFor.getText()));
        ficha.setModCon(Integer.parseInt(jLabelModCon.getText()));
        ficha.setModDex(Integer.parseInt(jLabelModDex.getText()));
        ficha.setModInt(Integer.parseInt(jLabelModInt.getText()));
        ficha.setModMen(Integer.parseInt(jLabelModMen.getText()));
        
        // setando pericias em ficha
        ficha.setPerCar(Integer.parseInt(jLabelPerCar.getText()));
        ficha.setPerFor(Integer.parseInt(jLabelPerFor.getText()));
        ficha.setPerCon(Integer.parseInt(jLabelPerCon.getText()));
        ficha.setPerDex(Integer.parseInt(jLabelPerDex.getText()));
        ficha.setPerInt(Integer.parseInt(jLabelPerInt.getText()));
        ficha.setPerMen(Integer.parseInt(jLabelPerMen.getText()));
        
        // setando novos valores
        ficha.setIni();
        ficha.setEsq();
        ficha.setCrt();
        ficha.setApr();
        ficha.setVel();
        ficha.setHp();
        ficha.setSorteDiaria();
        
        AlgoritmoPrincipalGerador.setFicha(ficha);
        
        switch (AlgoritmoPrincipalGerador.getjButton()) {
            case 0:
                // inserindo nova ficha e novo personagem
                AlgoritmoPrincipalGerador.putFicha(ficha);
                break;
            case 2:
                // substituindo ficha antiga pela editada
                AlgoritmoPrincipalGerador.replaceFicha(AlgoritmoPrincipalGerador.getNome(), ficha);
                break;
        }
        
        // ATUALIZANDO HABILIDADES
        CalculadoraHabilidades.init();
        
        // recalculando habilidades
        for (String nomeHabilidade : ficha.getHabilidades().keySet()) {
            int dano = CalculadoraHabilidades.calculaDano(ficha, ficha.getHabilidade(nomeHabilidade));
            ficha.getHabilidade(nomeHabilidade).setDano(dano);
        }
        
        // salvando ficha
        switch (AlgoritmoPrincipalGerador.getjButton()) {
            case 0:
                // inserindo nova ficha e novo personagem
                if (!AlgoritmoPrincipal.saveFicha(ficha)) {
                    return;
                }
                break;
            case 2:
                // substituindo ficha antiga pela editada
                if (!AlgoritmoPrincipal.updateFicha(ficha)) {
                    return;
                }
        }
        
        
        limparFicha();
        
        JOptionPane.showMessageDialog(null, "Ficha salva com sucesso!", "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void limparFicha() {
        // habilitando jTextFields
        jTextFieldName.setEnabled(true);
        jTextFieldAltura.setEnabled(true);
        jTextFieldAop.setEnabled(true);
        jTextFieldCar.setEnabled(true);
        jTextFieldCdn.setEnabled(true);
        jTextFieldCon.setEnabled(true);
        jTextFieldDex.setEnabled(true);
        jTextFieldEms.setEnabled(true);
        jTextFieldEn.setEnabled(true);
        jTextFieldEsp.setEnabled(true);
        jTextFieldEsq.setEnabled(true);
        jTextFieldExpBonus.setEnabled(true);
        jTextFieldFor.setEnabled(true);
        jTextFieldExpInicial.setEnabled(true);
        jTextFieldIdade.setEnabled(true);
        jTextFieldIni.setEnabled(true);
        jTextFieldInt.setEnabled(true);
        jTextFieldLvInicial.setEnabled(true);
        jTextFieldMan.setEnabled(true);
        jTextFieldMat.setEnabled(true);
        jTextFieldMen.setEnabled(true);
        jTextFieldMop.setEnabled(true);
        jTextFieldPeso.setEnabled(true);
        jTextFieldRef.setEnabled(true);
        jTextFieldRyu.setEnabled(true);
        jTextFieldTen.setEnabled(true);
        jTextFieldTrs.setEnabled(true);
        jTextFieldVel.setEnabled(true);
        jTextFieldZts.setEnabled(true);
        
        // habilitando jComboBoxes
        jComboBoxClasse.setEnabled(true);
        jComboBoxHunter.setEnabled(true);
        jComboBoxNen.setEnabled(true);
        jComboBoxTendencia.setEnabled(true);
        
        // habilitando jButtons
        jButtonCalcular.setEnabled(true);
        
        // desabilitando jButtons
        jButtonDecCar.setEnabled(false);
        jButtonDecCon.setEnabled(false);
        jButtonDecDex.setEnabled(false);
        jButtonDecFor.setEnabled(false);
        jButtonDecInt.setEnabled(false);
        jButtonDecMen.setEnabled(false);
        jButtonDecVel.setEnabled(false);
        jButtonIncCar.setEnabled(false);
        jButtonIncCon.setEnabled(false);
        jButtonIncDex.setEnabled(false);
        jButtonIncFor.setEnabled(false);
        jButtonIncInt.setEnabled(false);
        jButtonIncMen.setEnabled(false);
        jButtonIncVel.setEnabled(false);
        jButtonDistribuirESalvar.setEnabled(false);
        
        // habilitando jCheckBoxes
        jCheckBoxCriaturaDoMestre.setEnabled(true);
        jCheckBoxPersonagemDeJogador.setEnabled(true);
        
        // alterando nome do botão final
        jButtonDistribuirESalvar.setText("Distribuir e Salvar");
        
        limparPainel();
    }
    
    private double getDouble(String text) {
        double valor;
        try {
            valor = Double.parseDouble(text);
        } catch (NumberFormatException e) {
            try {
                text = text.replace(",", ".");
                valor = Double.parseDouble(text);
            } catch (NumberFormatException f) {
                return 0.0; // retorna 0 se houver erro
            }
        }
        return valor;
    }
    
    private void jButtonDistribuirESalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDistribuirESalvarActionPerformed
        switch (AlgoritmoPrincipalGerador.getjButton()) {
            case 0:
            {
                try {
                    distribuirESalvar();
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                break;

            case 1:
                limparFicha();
                AlgoritmoPrincipalGerador.setjButton(AlgoritmoPrincipalGerador.getDISTRIBUIR_E_SALVAR());
                break;
            case 2:
            {
                try {
                    distribuirESalvar();
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                AlgoritmoPrincipalGerador.setjButton(AlgoritmoPrincipalGerador.getDISTRIBUIR_E_SALVAR());
                break;

        }
    }//GEN-LAST:event_jButtonDistribuirESalvarActionPerformed

    private void habilitarDadosCalculados(boolean b) {
        jButtonDecCar.setEnabled(b);
        jButtonDecCon.setEnabled(b);
        jButtonDecDex.setEnabled(b);
        jButtonDecFor.setEnabled(b);
        jButtonDecInt.setEnabled(b);
        jButtonDecMen.setEnabled(b);
        jButtonDecVel.setEnabled(b);
        jButtonIncCar.setEnabled(b);
        jButtonIncCon.setEnabled(b);
        jButtonIncDex.setEnabled(b);
        jButtonIncFor.setEnabled(b);
        jButtonIncInt.setEnabled(b);
        jButtonIncMen.setEnabled(b);
        jButtonIncVel.setEnabled(b);
        jButtonDistribuirESalvar.setEnabled(b);
    }
    
    private void setarDadosCalculados(Ficha ficha) {
        // setando dados calculados
        jLabelLvl.setText(String.valueOf(ficha.getLvl()));
        jLabelExp.setText(String.valueOf(ficha.getExp()));
        jLabelLvlNen.setText(String.valueOf(ficha.getLvlNen()));
        jLabelExpNen.setText(String.valueOf(ficha.getExpNen()));
        jLabelIni.setText(String.valueOf(ficha.getIni()));
        jLabelEsq.setText(String.valueOf(ficha.getEsq()));
        jLabelApr.setText(String.valueOf(ficha.getApr()));
        jLabelCdn.setText(String.valueOf(ficha.getPerCdn()));
        jLabelHp.setText(String.valueOf(ficha.getHpMax()));
        jLabelMop.setText(String.valueOf(ficha.getMop() * 1000));
        jLabelCrt.setText(String.valueOf(20 - ficha.getCrt()));
        jLabelRen.setText(String.valueOf(CalculadoraGerador.getRen(ficha.getAtrRef(), ficha.getAop(), ficha.getTen())));

        jLabelVel.setText(String.valueOf(ficha.getVel()));
        
        jLabelPontos.setText(String.valueOf(CalculadoraGerador.getPontos()));
        
        // setando valores iniciais de atributo
        jLabelCarIni.setText(String.valueOf(ficha.getIniCar()));
        jLabelConIni.setText(String.valueOf(ficha.getIniCon()));
        jLabelDexIni.setText(String.valueOf(ficha.getIniDex()));
        jLabelForIni.setText(String.valueOf(ficha.getIniFor()));
        jLabelIntIni.setText(String.valueOf(ficha.getIniInt()));
        jLabelMenIni.setText(String.valueOf(ficha.getIniMen()));
        
        // setando valores de atributo
        jLabelValCar.setText(String.valueOf(ficha.getValCar()));
        jLabelValCon.setText(String.valueOf(ficha.getValCon()));
        jLabelValDex.setText(String.valueOf(ficha.getValDex()));
        jLabelValFor.setText(String.valueOf(ficha.getValFor()));
        jLabelValInt.setText(String.valueOf(ficha.getValInt()));
        jLabelValMen.setText(String.valueOf(ficha.getValMen()));
        
        // setando modificadores de atributo
        jLabelModCar.setText(String.valueOf(ficha.getModCar()));
        jLabelModFor.setText(String.valueOf(ficha.getModFor()));
        jLabelModCon.setText(String.valueOf(ficha.getModCon()));
        jLabelModInt.setText(String.valueOf(ficha.getModInt()));
        jLabelModMen.setText(String.valueOf(ficha.getModMen()));
        jLabelModDex.setText(String.valueOf(ficha.getModDex()));
        
        // setando bonus de atributo
        jLabelBCar.setText(String.valueOf(ficha.getbCar()));
        jLabelBFor.setText(String.valueOf(ficha.getbFor()));
        jLabelBCon.setText(String.valueOf(ficha.getbCon()));
        jLabelBInt.setText(String.valueOf(ficha.getbInt()));
        jLabelBMen.setText(String.valueOf(ficha.getbMen()));
        jLabelBDex.setText(String.valueOf(ficha.getbDex()));
        
        // setando pericias de atributo
        jLabelPerCar.setText(String.valueOf(ficha.getPerCar()));
        jLabelPerFor.setText(String.valueOf(ficha.getPerFor()));
        jLabelPerCon.setText(String.valueOf(ficha.getPerCon()));
        jLabelPerInt.setText(String.valueOf(ficha.getPerInt()));
        jLabelPerMen.setText(String.valueOf(ficha.getPerMen()));
        jLabelPerDex.setText(String.valueOf(ficha.getPerDex()));
    }
    
    private void jMenuItemIntegrarFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemIntegrarFichaActionPerformed
//        // carregando personagens derivados
//        try {
//            AlgoritmoPrincipalGerador.loadPersonagensDerivados();
//        } catch (IOException | ClassNotFoundException ex) {
//            Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        // integrando personagens
//        AlgoritmoPrincipalGerador.integrarPersonagensDerivados();
//        // salvando primitivos
//        AlgoritmoPrincipalGerador.savePersonagens();
//        
//         carregando fichas derivadas
//        AlgoritmoPrincipalGerador.loadFichasDerivadas();
//        // integrando personagens
//        AlgoritmoPrincipalGerador.integrarFichasDerivadas();
//        // salvando primitivos
//        AlgoritmoPrincipalGerador.saveFichas();
//        
//        JOptionPane.showMessageDialog(null, "BDs integrados", "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
        
        // importando ficha
        try {
            Ficha newFicha = AlgoritmoPrincipalGerador.loadFicha();
            // salvando ficha
//            File folder = new File(algoritmos.batalhas.AlgoritmoPrincipal.getDIR_FICHAS());
            AlgoritmoPrincipal.saveFicha(newFicha);
            
            JOptionPane.showMessageDialog(null, "Ficha salva com sucesso!\nNick: " +
                    AlgoritmoPrincipalGerador.getFicha().getNick(), "Success!", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Houve algum erro inesperado!", "Error!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemIntegrarFichaActionPerformed

    private void jTextFieldNickFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNickFocusGained
        jTextFieldNick.selectAll();
    }//GEN-LAST:event_jTextFieldNickFocusGained

    private void jTextFieldIdadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIdadeFocusGained
        jTextFieldIdade.selectAll();
    }//GEN-LAST:event_jTextFieldIdadeFocusGained

    private void jTextFieldAlturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAlturaFocusGained
        jTextFieldAltura.selectAll();
    }//GEN-LAST:event_jTextFieldAlturaFocusGained

    private void jTextFieldPesoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesoFocusGained
        jTextFieldPeso.selectAll();
    }//GEN-LAST:event_jTextFieldPesoFocusGained

    private void jTextFieldLvInicialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldLvInicialFocusGained
        jTextFieldLvInicial.selectAll();
    }//GEN-LAST:event_jTextFieldLvInicialFocusGained

    private void jTextFieldExpInicialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldExpInicialFocusGained
        jTextFieldExpInicial.selectAll();
    }//GEN-LAST:event_jTextFieldExpInicialFocusGained

    private void jTextFieldExpBonusFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldExpBonusFocusGained
        jTextFieldExpBonus.selectAll();
    }//GEN-LAST:event_jTextFieldExpBonusFocusGained

    private void jTextFieldRefFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldRefFocusGained
        jTextFieldRef.selectAll();
    }//GEN-LAST:event_jTextFieldRefFocusGained

    private void jTextFieldEmsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEmsFocusGained
        jTextFieldEms.selectAll();
    }//GEN-LAST:event_jTextFieldEmsFocusGained

    private void jTextFieldMatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMatFocusGained
        jTextFieldMat.selectAll();
    }//GEN-LAST:event_jTextFieldMatFocusGained

    private void jTextFieldManFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldManFocusGained
        jTextFieldMan.selectAll();
    }//GEN-LAST:event_jTextFieldManFocusGained

    private void jTextFieldTrsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTrsFocusGained
        jTextFieldTrs.selectAll();
    }//GEN-LAST:event_jTextFieldTrsFocusGained

    private void jTextFieldEspFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEspFocusGained
        jTextFieldEsp.selectAll();
    }//GEN-LAST:event_jTextFieldEspFocusGained

    private void jTextFieldCdnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCdnFocusGained
        jTextFieldCdn.selectAll();
    }//GEN-LAST:event_jTextFieldCdnFocusGained

    private void jTextFieldTenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTenFocusGained
        jTextFieldTen.selectAll();
    }//GEN-LAST:event_jTextFieldTenFocusGained

    private void jTextFieldRyuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldRyuFocusGained
        jTextFieldRyu.selectAll();
    }//GEN-LAST:event_jTextFieldRyuFocusGained

    private void jTextFieldEnFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEnFocusGained
        jTextFieldEn.selectAll();
    }//GEN-LAST:event_jTextFieldEnFocusGained

    private void jTextFieldAopFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAopFocusGained
        jTextFieldAop.selectAll();
    }//GEN-LAST:event_jTextFieldAopFocusGained

    private void jTextFieldMopFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMopFocusGained
        jTextFieldMop.selectAll();
    }//GEN-LAST:event_jTextFieldMopFocusGained

    private void jTextFieldForFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldForFocusGained
        jTextFieldFor.selectAll();
    }//GEN-LAST:event_jTextFieldForFocusGained

    private void jTextFieldConFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldConFocusGained
        jTextFieldCon.selectAll();
    }//GEN-LAST:event_jTextFieldConFocusGained

    private void jTextFieldDexFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDexFocusGained
        jTextFieldDex.selectAll();
    }//GEN-LAST:event_jTextFieldDexFocusGained

    private void jTextFieldIntFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIntFocusGained
        jTextFieldInt.selectAll();
    }//GEN-LAST:event_jTextFieldIntFocusGained

    private void jTextFieldCarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCarFocusGained
        jTextFieldCar.selectAll();
    }//GEN-LAST:event_jTextFieldCarFocusGained

    private void jTextFieldMenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMenFocusGained
        jTextFieldMen.selectAll();
    }//GEN-LAST:event_jTextFieldMenFocusGained

    private void jTextFieldIniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIniFocusGained
        jTextFieldIni.selectAll();
    }//GEN-LAST:event_jTextFieldIniFocusGained

    private void jTextFieldEsqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEsqFocusGained
        jTextFieldEsq.selectAll();
    }//GEN-LAST:event_jTextFieldEsqFocusGained

    private void jTextFieldVelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldVelFocusGained
        jTextFieldVel.selectAll();
    }//GEN-LAST:event_jTextFieldVelFocusGained

    private void desabilitarCampos() {
        // desabilitando jTextFields
        jTextFieldAltura.setEnabled(false);
        jTextFieldAop.setEnabled(false);
        jTextFieldCar.setEnabled(false);
        jTextFieldCdn.setEnabled(false);
        jTextFieldCon.setEnabled(false);
        jTextFieldDex.setEnabled(false);
        jTextFieldEms.setEnabled(false);
        jTextFieldEn.setEnabled(false);
        jTextFieldEsp.setEnabled(false);
        jTextFieldEsq.setEnabled(false);
        jTextFieldExpBonus.setEnabled(false);
        jTextFieldFor.setEnabled(false);
        jTextFieldExpInicial.setEnabled(false);
        jTextFieldIdade.setEnabled(false);
        jTextFieldIni.setEnabled(false);
        jTextFieldInt.setEnabled(false);
        jTextFieldLvInicial.setEnabled(false);
        jTextFieldMan.setEnabled(false);
        jTextFieldMat.setEnabled(false);
        jTextFieldMen.setEnabled(false);
        jTextFieldMop.setEnabled(false);
        jTextFieldPeso.setEnabled(false);
        jTextFieldRef.setEnabled(false);
        jTextFieldRyu.setEnabled(false);
        jTextFieldTen.setEnabled(false);
        jTextFieldTrs.setEnabled(false);
        jTextFieldVel.setEnabled(false);
        jTextFieldZts.setEnabled(false);
        
        // desabilitando jComboBoxes
        jComboBoxClasse.setEnabled(false);
        jComboBoxHunter.setEnabled(false);
        jComboBoxNen.setEnabled(false);
        jComboBoxTendencia.setEnabled(false);
        
        // desabilitando jButtons
        jButtonCalcular.setEnabled(false);
        
        // desabilitando jButtons de distribuição
        jButtonIncCar.setEnabled(false);
        jButtonIncCon.setEnabled(false);
        jButtonIncDex.setEnabled(false);
        jButtonIncFor.setEnabled(false);
        jButtonIncInt.setEnabled(false);
        jButtonIncMen.setEnabled(false);
        jButtonIncVel.setEnabled(false);

        jButtonDecCar.setEnabled(false);
        jButtonDecCon.setEnabled(false);
        jButtonDecDex.setEnabled(false);
        jButtonDecFor.setEnabled(false);
        jButtonDecInt.setEnabled(false);
        jButtonDecMen.setEnabled(false);
        jButtonDecVel.setEnabled(false);
        
        // jCheckBoxes
        jCheckBoxCriaturaDoMestre.setEnabled(false);
        jCheckBoxPersonagemDeJogador.setEnabled(false);
    }
    
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // lendo o nome do personagem
        // retorna true se atacante for um nome valido
        Ficha ficha;
        String nomePer = jTextFieldNick.getText().toUpperCase();
        if (AlgoritmoPrincipal.containsFicha(nomePer)) {
            ficha = AlgoritmoPrincipal.getFicha(nomePer);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome\n" +
                    "Insira o nome do personagem desejado no campo Nome", "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // setando personagem em algoritmo principal
        AlgoritmoPrincipalGerador.setFicha(ficha);
        
        // desabilitando campos
        desabilitarCampos();
        
        // preparando jButton final
        // habilitando o jButton
        jButtonDistribuirESalvar.setEnabled(true);
        // alterando nome do jButton
        jButtonDistribuirESalvar.setText("Limpar Ficha");
        // preparando case do jButton
        AlgoritmoPrincipalGerador.setjButton(AlgoritmoPrincipalGerador.getLIMPAR_FICHA());
        
        
        // setando informações do personagem
        // setando formulário do personagem
        jTextFieldName.setText(ficha.getNome());
        jTextFieldNick.setText(ficha.getNick());
        jTextFieldIdade.setText(String.valueOf(ficha.getIdade()));
        jTextFieldAltura.setText(String.valueOf(ficha.getAltura()));
        jTextFieldPeso.setText(String.valueOf(ficha.getPeso()));
        
        jComboBoxClasse.setSelectedItem(ficha.getClasse());
        jComboBoxNen.setSelectedItem(ficha.getNen());
        jComboBoxTendencia.setSelectedItem(ficha.getTendencia());
        jComboBoxHunter.setSelectedItem(ficha.getHunter());
        
        jTextFieldLvInicial.setText(String.valueOf(ficha.getLvl()));
        jTextFieldExpInicial.setText(String.valueOf(ficha.getExp()));
        jTextFieldExpBonus.setText(String.valueOf(ficha.getExpBonus()));
        
        jCheckBoxPersonagemDeJogador.setSelected(ficha.isPersonagemDeJogador());
        jCheckBoxCriaturaDoMestre.setSelected(ficha.isCriaturaDoMestre());
        
        // setando atributos nen
        jTextFieldRef.setText(String.valueOf(ficha.getAtrRef()));
        jTextFieldEms.setText(String.valueOf(ficha.getAtrEms()));
        jTextFieldMan.setText(String.valueOf(ficha.getAtrMan()));
        jTextFieldMat.setText(String.valueOf(ficha.getAtrMat()));
        jTextFieldTrs.setText(String.valueOf(ficha.getAtrTrs()));
        jTextFieldEsp.setText(String.valueOf(ficha.getAtrEsp()));
        jTextFieldCdn.setText(String.valueOf(ficha.getAtrCdn()));
        jTextFieldTen.setText(String.valueOf(ficha.getTen()));
        jTextFieldRyu.setText(String.valueOf(ficha.getRyu()));
        jTextFieldAop.setText(String.valueOf(ficha.getAop()));
        jTextFieldMop.setText(String.valueOf(ficha.getMop()));
        jTextFieldZts.setText(String.valueOf(ficha.getZts()));
        jTextFieldEn.setText(String.valueOf(ficha.getEn()));
        
        // setando atributos iniciais
        jTextFieldFor.setText(String.valueOf(ficha.getIniFor()));
        jTextFieldCon.setText(String.valueOf(ficha.getIniCon()));
        jTextFieldDex.setText(String.valueOf(ficha.getIniDex()));
        jTextFieldInt.setText(String.valueOf(ficha.getIniInt()));
        jTextFieldCar.setText(String.valueOf(ficha.getIniCar()));
        jTextFieldMen.setText(String.valueOf(ficha.getIniMen()));
        
        // setando proficiencias treinadas
        jTextFieldIni.setText(String.valueOf(ficha.getProIni() - Classes.get(ficha.getClasse()).getbIni()));
        jTextFieldEsq.setText(String.valueOf(ficha.getProEsq() - Classes.get(ficha.getClasse()).getbEsq()));
        jTextFieldVel.setText(String.valueOf(ficha.getProVel() - Classes.get(ficha.getClasse()).getbVel()));
        
        
        // setando dados calculados
        jLabelLvl.setText(String.valueOf(ficha.getLvl()));
        jLabelExp.setText(String.valueOf(ficha.getExp()));
        jLabelLvlNen.setText(String.valueOf(ficha.getLvlNen()));
        jLabelExpNen.setText(String.valueOf(ficha.getExpNen()));
        jLabelIni.setText(String.valueOf(ficha.getIni()));
        jLabelEsq.setText(String.valueOf(ficha.getEsq()));
        jLabelCrt.setText(String.valueOf(20 - ficha.getCrt()));
        jLabelApr.setText(String.valueOf(ficha.getApr()));
        jLabelHp.setText(String.valueOf(ficha.getHpMax()));
        jLabelMop.setText(String.valueOf(ficha.getMop() * 1000));
        jLabelCdn.setText(String.valueOf(ficha.getPerCdn()));
        jLabelRen.setText(String.valueOf(CalculadoraGerador.getRen(ficha.getValPRef(), ficha.getAop(), ficha.getTen())));
        
        jLabelPontos.setText("0");
        jLabelVel.setText(String.valueOf(ficha.getVel()));
        
        jLabelForIni.setText(String.valueOf(ficha.getIniFor()));
        jLabelConIni.setText(String.valueOf(ficha.getIniCon()));
        jLabelDexIni.setText(String.valueOf(ficha.getIniDex()));
        jLabelIntIni.setText(String.valueOf(ficha.getIniInt()));
        jLabelCarIni.setText(String.valueOf(ficha.getIniCar()));
        jLabelMenIni.setText(String.valueOf(ficha.getIniMen()));
        
        jLabelValFor.setText(String.valueOf(ficha.getValFor()));
        jLabelValCon.setText(String.valueOf(ficha.getValCon()));
        jLabelValDex.setText(String.valueOf(ficha.getValDex()));
        jLabelValInt.setText(String.valueOf(ficha.getValInt()));
        jLabelValCar.setText(String.valueOf(ficha.getValCar()));
        jLabelValMen.setText(String.valueOf(ficha.getValMen()));
        
        jLabelModFor.setText(String.valueOf(ficha.getModFor()));
        jLabelModCon.setText(String.valueOf(ficha.getModCon()));
        jLabelModDex.setText(String.valueOf(ficha.getModDex()));
        jLabelModInt.setText(String.valueOf(ficha.getModInt()));
        jLabelModCar.setText(String.valueOf(ficha.getModCar()));
        jLabelModMen.setText(String.valueOf(ficha.getModMen()));
        
        jLabelBFor.setText(String.valueOf(ficha.getbFor()));
        jLabelBCon.setText(String.valueOf(ficha.getbCon()));
        jLabelBDex.setText(String.valueOf(ficha.getbDex()));
        jLabelBInt.setText(String.valueOf(ficha.getbInt()));
        jLabelBCar.setText(String.valueOf(ficha.getbCar()));
        jLabelBMen.setText(String.valueOf(ficha.getbMen()));
        
        jLabelPerFor.setText(String.valueOf(ficha.getPerFor()));
        jLabelPerCon.setText(String.valueOf(ficha.getPerCon()));
        jLabelPerDex.setText(String.valueOf(ficha.getPerDex()));
        jLabelPerInt.setText(String.valueOf(ficha.getPerInt()));
        jLabelPerCar.setText(String.valueOf(ficha.getPerCar()));
        jLabelPerMen.setText(String.valueOf(ficha.getPerMen()));
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void setarInformacoes(Ficha ficha) {
        // setando formulário do personagem
        jTextFieldName.setText(ficha.getNome());
        jTextFieldNick.setText(ficha.getNick());
        jTextFieldIdade.setText(String.valueOf(ficha.getIdade()));
        jTextFieldAltura.setText(String.valueOf(ficha.getAltura()));
        jTextFieldPeso.setText(String.valueOf(ficha.getPeso()));
        
        jComboBoxClasse.setSelectedItem(ficha.getClasse());
        jComboBoxNen.setSelectedItem(ficha.getNen());
        jComboBoxTendencia.setSelectedItem(ficha.getTendencia());
        jComboBoxHunter.setSelectedItem(ficha.getHunter());
        
//        jTextFieldLvInicial.setText(String.valueOf(ficha.getLvl()));
        jTextFieldLvInicial.setText(String.valueOf(AlgoritmoPrincipalGerador.getLVL_INICIAL()));
        jTextFieldExpInicial.setText(String.valueOf(ficha.getExp()));
        jTextFieldExpBonus.setText(String.valueOf(ficha.getExpBonus()));
        
        jCheckBoxPersonagemDeJogador.setSelected(ficha.isPersonagemDeJogador());
        jCheckBoxCriaturaDoMestre.setSelected(ficha.isCriaturaDoMestre());
        
        // setando atributos nen
        jTextFieldRef.setText(String.valueOf(ficha.getAtrRef()));
        jTextFieldEms.setText(String.valueOf(ficha.getAtrEms()));
        jTextFieldMan.setText(String.valueOf(ficha.getAtrMan()));
        jTextFieldMat.setText(String.valueOf(ficha.getAtrMat()));
        jTextFieldTrs.setText(String.valueOf(ficha.getAtrTrs()));
        jTextFieldEsp.setText(String.valueOf(ficha.getAtrEsp()));
        jTextFieldCdn.setText(String.valueOf(ficha.getAtrCdn()));
        jTextFieldTen.setText(String.valueOf(ficha.getTen()));
        jTextFieldRyu.setText(String.valueOf(ficha.getRyu()));
        jTextFieldAop.setText(String.valueOf(ficha.getAop()));
        jTextFieldMop.setText(String.valueOf(ficha.getMop()));
        jTextFieldZts.setText(String.valueOf(ficha.getZts()));
        jTextFieldEn.setText(String.valueOf(ficha.getEn()));
        
        // setando atributos iniciais
        jTextFieldFor.setText(String.valueOf(ficha.getIniFor()));
        jTextFieldCon.setText(String.valueOf(ficha.getIniCon()));
        jTextFieldDex.setText(String.valueOf(ficha.getIniDex()));
        jTextFieldInt.setText(String.valueOf(ficha.getIniInt()));
        jTextFieldCar.setText(String.valueOf(ficha.getIniCar()));
        jTextFieldMen.setText(String.valueOf(ficha.getIniMen()));
        
        // setando proficiencias treinadas
        jTextFieldIni.setText(String.valueOf(ficha.getProIni() - Classes.get(ficha.getClasse()).getbIni()));
        jTextFieldEsq.setText(String.valueOf(ficha.getProEsq() - Classes.get(ficha.getClasse()).getbEsq()));
        jTextFieldVel.setText(String.valueOf(ficha.getProVel() - Classes.get(ficha.getClasse()).getbVel()));
    }
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // lendo o nome do personagem
        // retorna true se atacante for um nome valido
        Ficha ficha;
        String nomePer = jTextFieldNick.getText().toUpperCase();
        if (AlgoritmoPrincipal.containsFicha(nomePer)) {
            ficha = AlgoritmoPrincipal.getFicha(nomePer);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome",
                    "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // guardando chave (nome do personagem)
        AlgoritmoPrincipalGerador.setNome(nomePer);
        
        // setando personagem em algoritmo principal
        AlgoritmoPrincipalGerador.setFicha(ficha);
        
        // habilitando funções
        limparFicha();
        
        // desabilitando jTextFields
        jTextFieldCar.setEnabled(false);
        jTextFieldCon.setEnabled(false);
        jTextFieldDex.setEnabled(false);
        jTextFieldFor.setEnabled(false);
        jTextFieldInt.setEnabled(false);
        jTextFieldMen.setEnabled(false);
        jTextFieldLvInicial.setEnabled(false);
        
        // desabilitando jComboBoxes
        jComboBoxClasse.setEnabled(false);
        
        // desabilitando jButtons
        jButtonDistribuirESalvar.setEnabled(false);
        
        // desabilitando jButtons de distribuição
        jButtonIncCar.setEnabled(false);
        jButtonIncCon.setEnabled(false);
        jButtonIncDex.setEnabled(false);
        jButtonIncFor.setEnabled(false);
        jButtonIncInt.setEnabled(false);
        jButtonIncMen.setEnabled(false);
        jButtonIncVel.setEnabled(false);

        jButtonDecCar.setEnabled(false);
        jButtonDecCon.setEnabled(false);
        jButtonDecDex.setEnabled(false);
        jButtonDecFor.setEnabled(false);
        jButtonDecInt.setEnabled(false);
        jButtonDecMen.setEnabled(false);
        jButtonDecVel.setEnabled(false);
        
        // preparando case do jButton
        AlgoritmoPrincipalGerador.setjButton(AlgoritmoPrincipalGerador.getRECALCULAR_FICHA());
        
        // setando informações do personagem
        setarInformacoes(ficha);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        switch (JOptionPane.showConfirmDialog(null, "Deseja sair do Gerador de Fichas?",
            "Fechar?", JOptionPane.YES_NO_OPTION)) {
        case 0:
        this.dispose();
        break;
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        limparFicha();
        AlgoritmoPrincipalGerador.setjButton(0);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jTextFieldZtsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldZtsFocusGained
        jTextFieldZts.selectAll();
    }//GEN-LAST:event_jTextFieldZtsFocusGained

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        new View_inventario(null, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jLabel55MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MouseEntered
        jLabel55.setToolTipText("Exp Nen");
    }//GEN-LAST:event_jLabel55MouseEntered

    private void jLabelExpNenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExpNenMouseEntered
        jLabelExpNen.setToolTipText("Exp Nen");
    }//GEN-LAST:event_jLabelExpNenMouseEntered

    private void jLabel93MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel93MouseEntered
        jLabel93.setToolTipText("Mop");
    }//GEN-LAST:event_jLabel93MouseEntered

    private void jLabelMopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMopMouseEntered
        jLabelMop.setToolTipText("Mop");
    }//GEN-LAST:event_jLabelMopMouseEntered

    private void jLabel42MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel42MouseEntered
        jLabel42.setToolTipText("Val Cdn");
    }//GEN-LAST:event_jLabel42MouseEntered

    private void jLabelCdnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCdnMouseEntered
        jLabelCdn.setToolTipText("Val Cdn");
    }//GEN-LAST:event_jLabelCdnMouseEntered

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Ficha ficha;
        // lendo o nome do personagem
        String nomePer = jTextFieldNick.getText().toUpperCase();
        // retorna true se atacante for um nome valido
        if (AlgoritmoPrincipal.containsFicha(nomePer)) {
            ficha = AlgoritmoPrincipal.getFicha(nomePer);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome",
                    "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // setando personagem em algoritmo principal
        AlgoritmoPrincipalGerador.setFicha(ficha);

        new View_nomeFicha(null, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // lendo o nome do personagem
        // retorna true se atacante for um nome valido
        String nomePer = jTextFieldNick.getText().toUpperCase();
        if (!AlgoritmoPrincipal.containsFicha(nomePer)) {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome\n" +
                    "Insira o nome do personagem desejado no campo Nome", "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        switch (JOptionPane.showConfirmDialog(null, "Deseja deletar essa ficha?", "Warning!", JOptionPane.YES_NO_OPTION)) {
            case JOptionPane.YES_OPTION :
                // deletando ficha
                if (!AlgoritmoPrincipal.deleteFicha(nomePer)) {
                    JOptionPane.showMessageDialog(null, "Não foi possível deletar a ficha!",
                        "Error!", JOptionPane.WARNING_MESSAGE);
                
                } else {
                    AlgoritmoPrincipal.removeFicha(nomePer);
                    
                    // mensagem ao usuario
                    JOptionPane.showMessageDialog(null, "Ficha removida com sucesso!",
                            "Success!", JOptionPane.INFORMATION_MESSAGE);

                    // mensagem ao usuario
                    JOptionPane.showMessageDialog(null, "Banco de dados salvo com sucesso!",
                            "Success!", JOptionPane.INFORMATION_MESSAGE);
                }
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        new View_descricao(null, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        Ficha ficha = AlgoritmoPrincipalGerador.getFicha();
        if (ficha == null) {
            JOptionPane.showMessageDialog(null, "Primeiro escolha um personagem válido!",
                    "Error", JOptionPane.WARNING_MESSAGE);
            
            return;
        }
        new View_breveDescricao(null, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        try {
            new ViewPrincipalHabilidades().setVisible(true);
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        try {
            new ViewPrincipalTrainer().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(ViewPrincipalGerador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jTextFieldNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNameFocusGained
        jTextFieldName.selectAll();
    }//GEN-LAST:event_jTextFieldNameFocusGained

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // lendo o nome do personagem
        // retorna true se atacante for um nome valido
        Ficha ficha;
        String nomePer = jTextFieldNick.getText().toUpperCase();
        if (AlgoritmoPrincipal.containsFicha(nomePer)) {
            ficha = AlgoritmoPrincipal.getFicha(nomePer);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome\n" +
                    "Insira o nome do personagem desejado no campo Nome", "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // setando personagem em algoritmo principal
        AlgoritmoPrincipalGerador.setFicha(ficha);
        
        
        // desabilitando campos
        desabilitarCampos();
        
        // preparando case do jButton
        AlgoritmoPrincipalGerador.setjButton(AlgoritmoPrincipalGerador.getRECALCULAR_FICHA());
        
        
        // habilitando dados calculados
        habilitarDadosCalculados(true);
        
        
        // calculando pontos
        int pontos = ficha.getLvl();
        pontos -= ficha.getValFor() - ficha.getIniFor();
        pontos -= ficha.getValCon() - ficha.getIniCon();
        pontos -= ficha.getValDex() - ficha.getIniDex();
        pontos -= ficha.getValInt() - ficha.getIniInt();
        pontos -= ficha.getValCar() - ficha.getIniCar();
        pontos -= ficha.getValMen() - ficha.getIniMen();
        // correção do ponto inexistente no primeiro lvl
        pontos--;
        
        // setando pontos
        CalculadoraGerador.setPontos(pontos);
        
        
        // setando dados calculados
        setarDadosCalculados(ficha);
        
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        new ViewFicha().setVisible(true);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        Ficha ficha;
        String nick = jTextFieldNick.getText().toUpperCase();
        if (AlgoritmoPrincipal.containsFicha(nick)) {
            ficha = AlgoritmoPrincipal.getFicha(nick);
        } else {
            JOptionPane.showMessageDialog(null, "Não foi encontrado um personagem com esse nome\n" +
                    "Insira o nome do personagem desejado no campo Nome", "Error!", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(nick + ".dat"))) {
            oos.writeObject(ficha);
            oos.close();
            
            JOptionPane.showMessageDialog(null, "ficha.dat exportada com sucesso!", "Success!",
                    JOptionPane.INFORMATION_MESSAGE);
            
        } catch (IOException e) {
            System.out.println(e.toString());
            
            JOptionPane.showMessageDialog(null, "ficha.dat não exportada!", "Error!",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipalGerador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewPrincipalGerador().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcular;
    private javax.swing.JButton jButtonDecCar;
    private javax.swing.JButton jButtonDecCon;
    private javax.swing.JButton jButtonDecDex;
    private javax.swing.JButton jButtonDecFor;
    private javax.swing.JButton jButtonDecInt;
    private javax.swing.JButton jButtonDecMen;
    private javax.swing.JButton jButtonDecVel;
    private javax.swing.JButton jButtonDistribuirESalvar;
    private javax.swing.JButton jButtonIncCar;
    private javax.swing.JButton jButtonIncCon;
    private javax.swing.JButton jButtonIncDex;
    private javax.swing.JButton jButtonIncFor;
    private javax.swing.JButton jButtonIncInt;
    private javax.swing.JButton jButtonIncMen;
    private javax.swing.JButton jButtonIncVel;
    private javax.swing.JCheckBox jCheckBoxCriaturaDoMestre;
    private javax.swing.JCheckBox jCheckBoxPersonagemDeJogador;
    private javax.swing.JComboBox<String> jComboBoxClasse;
    private javax.swing.JComboBox<String> jComboBoxHunter;
    private javax.swing.JComboBox<String> jComboBoxNen;
    private javax.swing.JComboBox<String> jComboBoxTendencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabelApr;
    private javax.swing.JLabel jLabelBCar;
    private javax.swing.JLabel jLabelBCon;
    private javax.swing.JLabel jLabelBDex;
    private javax.swing.JLabel jLabelBFor;
    private javax.swing.JLabel jLabelBInt;
    private javax.swing.JLabel jLabelBMen;
    private javax.swing.JLabel jLabelCarIni;
    private javax.swing.JLabel jLabelCdn;
    private javax.swing.JLabel jLabelConIni;
    private javax.swing.JLabel jLabelCrt;
    private javax.swing.JLabel jLabelDexIni;
    private javax.swing.JLabel jLabelEsq;
    private javax.swing.JLabel jLabelExp;
    private javax.swing.JLabel jLabelExpNen;
    private javax.swing.JLabel jLabelForIni;
    private javax.swing.JLabel jLabelHp;
    private javax.swing.JLabel jLabelIni;
    private javax.swing.JLabel jLabelIntIni;
    private javax.swing.JLabel jLabelLvl;
    private javax.swing.JLabel jLabelLvlNen;
    private javax.swing.JLabel jLabelMenIni;
    private javax.swing.JLabel jLabelModCar;
    private javax.swing.JLabel jLabelModCon;
    private javax.swing.JLabel jLabelModDex;
    private javax.swing.JLabel jLabelModFor;
    private javax.swing.JLabel jLabelModInt;
    private javax.swing.JLabel jLabelModMen;
    private javax.swing.JLabel jLabelMop;
    private javax.swing.JLabel jLabelPerCar;
    private javax.swing.JLabel jLabelPerCon;
    private javax.swing.JLabel jLabelPerDex;
    private javax.swing.JLabel jLabelPerFor;
    private javax.swing.JLabel jLabelPerInt;
    private javax.swing.JLabel jLabelPerMen;
    private javax.swing.JLabel jLabelPontos;
    private javax.swing.JLabel jLabelRen;
    private javax.swing.JLabel jLabelValCar;
    private javax.swing.JLabel jLabelValCon;
    private javax.swing.JLabel jLabelValDex;
    private javax.swing.JLabel jLabelValFor;
    private javax.swing.JLabel jLabelValInt;
    private javax.swing.JLabel jLabelValMen;
    private javax.swing.JLabel jLabelVel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemIntegrarFicha;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldAltura;
    private javax.swing.JTextField jTextFieldAop;
    private javax.swing.JTextField jTextFieldCar;
    private javax.swing.JTextField jTextFieldCdn;
    private javax.swing.JTextField jTextFieldCon;
    private javax.swing.JTextField jTextFieldDex;
    private javax.swing.JTextField jTextFieldEms;
    private javax.swing.JTextField jTextFieldEn;
    private javax.swing.JTextField jTextFieldEsp;
    private javax.swing.JTextField jTextFieldEsq;
    private javax.swing.JTextField jTextFieldExpBonus;
    private javax.swing.JTextField jTextFieldExpInicial;
    private javax.swing.JTextField jTextFieldFor;
    private javax.swing.JTextField jTextFieldIdade;
    private javax.swing.JTextField jTextFieldIni;
    private javax.swing.JTextField jTextFieldInt;
    private javax.swing.JTextField jTextFieldLvInicial;
    private javax.swing.JTextField jTextFieldMan;
    private javax.swing.JTextField jTextFieldMat;
    private javax.swing.JTextField jTextFieldMen;
    private javax.swing.JTextField jTextFieldMop;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldNick;
    private javax.swing.JTextField jTextFieldPeso;
    private javax.swing.JTextField jTextFieldRef;
    private javax.swing.JTextField jTextFieldRyu;
    private javax.swing.JTextField jTextFieldTen;
    private javax.swing.JTextField jTextFieldTrs;
    private javax.swing.JTextField jTextFieldVel;
    private javax.swing.JTextField jTextFieldZts;
    // End of variables declaration//GEN-END:variables
}
