/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.trainer;

import algoritmos.trainer.AlgoritmoPrincipalTrainer;
import algoritmos.trainer.CalculadoraTrainer;
import ficha_personagem.Ficha;
import ficha_personagem.LvlBonus;
import ficha_personagem.Treino;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 422UR4H
 */
public class View_treinoProEPer extends javax.swing.JDialog {

    /**
     * Creates new form View_treinoProEPer
     * @param parent
     * @param modal
     */
    public View_treinoProEPer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        // meu codigo
        
        
        // setando nome da pericia ou proficiencia
        switch (AlgoritmoPrincipalTrainer.getNomeTreino()) {
            case "INI":
            jLabelNome.setText("INICIATIVA");
                break;
            case "VEL":
            jLabelNome.setText("VELOCIDADE");
                break;
            case "ESQ":
            jLabelNome.setText("ESQUIVA (CA)");
                break;
            case "APR":
            jLabelNome.setText("APR");
                break;
            case "CRT":
            jLabelNome.setText("CRITTICO");
                break;
            case "HP":
            jLabelNome.setText("COEF. DE HP");
                break;
            default:
            jLabelNome.setText(AlgoritmoPrincipalTrainer.getNomeTreino());
        }
        
        // desabilitando jButtons
        desabilitandoJButtons();
        
        // setando lvlBonus para facilitar a manipulação de valores
        LvlBonus lvlBonus = new LvlBonus();
        if (AlgoritmoPrincipalTrainer.getTreinar() == AlgoritmoPrincipalTrainer.getPER()) {
            Ficha ficha = AlgoritmoPrincipalTrainer.getFicha();
            String nome = AlgoritmoPrincipalTrainer.getNomeTreino();
            
            lvlBonus.setLvl(ficha.getPer().get(nome).getLvl());
            lvlBonus.setLvj(ficha.getPer().get(nome).getLvj());
            lvlBonus.setBonus(ficha.getPer().get(nome).getBonus());
        } else { // AlgoritmoPrincipalUpper.getTreinar() == AlgoritmoPrincipalUpper.getPRO()
            Ficha ficha = AlgoritmoPrincipalTrainer.getFicha();
            String nome = AlgoritmoPrincipalTrainer.getNomeTreino();
            
            lvlBonus.setLvl(ficha.getPro().get(nome).getLvl());
            lvlBonus.setLvj(ficha.getPro().get(nome).getLvj());
            lvlBonus.setBonus(ficha.getPro().get(nome).getBonus());
        }
        // setando informações de lvl e bonus
        jLabelLvl.setText(String.valueOf(lvlBonus.getLvl()));
        jLabelSubLvl.setText(String.valueOf(lvlBonus.getLvj()));
        jLabelBonus.setText(String.valueOf(lvlBonus.getBonus()));
        
        double diasIgnorados = AlgoritmoPrincipalTrainer.getDiasIgnorados();
        if (diasIgnorados != 0) {
            jTextFieldQtd.setText(String.valueOf(diasIgnorados));
            jTextFieldQtd.setEnabled(false);
            jButtonQtdOk.setEnabled(false);
            
            initTreino();
        }
        
        // setando icones iniciais dos dados
        // setar dado sub-lvl
        String dir = "/images/dados/";
        dir += String.valueOf(Integer.parseInt(jLabelSubLvl.getText()) + 1) + ".png";
        ImageIcon icone = criarImageIcon(dir, "null");
        jLabelDadoSubLvl.setIcon(icone);
        
        // se o bonus for maior que 7, não haverá mais treino
        // assim como se lvl for maior que 7, não haverá mais bonus
        if (Integer.parseInt(jLabelBonus.getText()) > 7 || Integer.parseInt(jLabelLvl.getText()) > 6) {
            jLabelDadoBonus.setIcon(null);
            return;
        }
        // setar dado bonus
        dir = "/images/dados/";
        dir += jLabelBonus.getText() + ".png";
        icone = criarImageIcon(dir, "null");
        jLabelDadoBonus.setIcon(icone);
        

        // fim do meu codigo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabelDiasPassados = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabelSubLvl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelDadoBonus = new javax.swing.JLabel();
        jLabelDadoSubLvl = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabelLvl = new javax.swing.JLabel();
        jLabelBonus = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jButtonUpouSubLvl = new javax.swing.JButton();
        jButtonUpouBonus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldQtd = new javax.swing.JTextField();
        jButtonQtdOk = new javax.swing.JButton();
        jCheckBoxAteUpar = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabelDiasRestantes = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButtonPerdeuODia = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jButtonUpouSubLvlEBonus = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jButtonDecrementa = new javax.swing.JButton();
        jButtonIncrementa = new javax.swing.JButton();
        jLabelContador = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Treino Pro e Per");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jTable.setBackground(new java.awt.Color(51, 51, 51));
        jTable.setForeground(new java.awt.Color(0, 255, 0));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Dia", "Bonus", "Sub-Lvl", "Lvl"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setSelectionBackground(new java.awt.Color(0, 255, 255));
        jTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(jTable);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabelDiasPassados.setBackground(new java.awt.Color(102, 102, 102));
        jLabelDiasPassados.setText("0");

        jLabel18.setBackground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Sub-Level: ");

        jLabelSubLvl.setBackground(new java.awt.Color(102, 102, 102));
        jLabelSubLvl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSubLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Dado Bonus");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Dado Sub-Lvl");

        jLabelDadoBonus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDadoBonus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelDadoSubLvl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDadoSubLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setBackground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Level: ");

        jLabelLvl.setBackground(new java.awt.Color(102, 102, 102));
        jLabelLvl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLvl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelBonus.setBackground(new java.awt.Color(0, 255, 0));
        jLabelBonus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBonus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel19.setBackground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Treinando ");

        jLabelNome.setBackground(new java.awt.Color(102, 102, 102));

        jButtonUpouSubLvl.setBackground(new java.awt.Color(102, 102, 102));
        jButtonUpouSubLvl.setText("Upou Sub-Level");
        jButtonUpouSubLvl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpouSubLvlActionPerformed(evt);
            }
        });

        jButtonUpouBonus.setBackground(new java.awt.Color(102, 102, 102));
        jButtonUpouBonus.setText("Upou Bonus");
        jButtonUpouBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpouBonusActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Treinar quantas vezes?");

        jTextFieldQtd.setBackground(new java.awt.Color(51, 51, 51));
        jTextFieldQtd.setForeground(new java.awt.Color(0, 255, 0));
        jTextFieldQtd.setCaretColor(new java.awt.Color(0, 255, 0));
        jTextFieldQtd.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldQtd.setSelectionColor(new java.awt.Color(0, 255, 255));
        jTextFieldQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQtdKeyPressed(evt);
            }
        });

        jButtonQtdOk.setBackground(new java.awt.Color(102, 102, 102));
        jButtonQtdOk.setText("OK");
        jButtonQtdOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQtdOkActionPerformed(evt);
            }
        });

        jCheckBoxAteUpar.setBackground(new java.awt.Color(102, 102, 102));
        jCheckBoxAteUpar.setText("Até Upar");

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Dias Restantes: ");

        jLabelDiasRestantes.setBackground(new java.awt.Color(102, 102, 102));

        jLabel15.setBackground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Bonus: ");

        jButtonPerdeuODia.setBackground(new java.awt.Color(102, 102, 102));
        jButtonPerdeuODia.setText("Perdeu o Dia");
        jButtonPerdeuODia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerdeuODiaActionPerformed(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Dias Passados: ");

        jButtonUpouSubLvlEBonus.setBackground(new java.awt.Color(102, 102, 102));
        jButtonUpouSubLvlEBonus.setText("Upou Sub-Level e Bonus");
        jButtonUpouSubLvlEBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpouSubLvlEBonusActionPerformed(evt);
            }
        });

        jButtonFechar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonFechar.setText("FECHAR");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jButtonDecrementa.setBackground(new java.awt.Color(102, 102, 102));
        jButtonDecrementa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/menos.png"))); // NOI18N
        jButtonDecrementa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecrementaActionPerformed(evt);
            }
        });

        jButtonIncrementa.setBackground(new java.awt.Color(102, 102, 102));
        jButtonIncrementa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outros/mais.png"))); // NOI18N
        jButtonIncrementa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncrementaActionPerformed(evt);
            }
        });

        jLabelContador.setBackground(new java.awt.Color(102, 102, 102));
        jLabelContador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelContador.setText("0");

        jLabel6.setText("Contador: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonQtdOk, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxAteUpar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDiasPassados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDiasRestantes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButtonPerdeuODia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpouBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpouSubLvl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpouSubLvlEBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(12, 12, 12)
                                .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jLabelDadoBonus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDadoSubLvl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabelSubLvl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelLvl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButtonDecrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelContador, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonIncrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonQtdOk, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxAteUpar))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDiasPassados, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDiasRestantes, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSubLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDecrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIncrementa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelContador, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDadoSubLvl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDadoBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpouSubLvlEBonus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpouSubLvl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpouBonus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPerdeuODia)
                .addGap(18, 18, 18)
                .addComponent(jButtonFechar)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void desabilitandoJButtons() {
        jButtonPerdeuODia.setEnabled(false);
        jButtonUpouBonus.setEnabled(false);
        jButtonUpouSubLvl.setEnabled(false);
        jButtonUpouSubLvlEBonus.setEnabled(false);
    }
    
    
    private void setQtdTreinos() {
        double qtd;
        try {
            qtd = Double.parseDouble(jTextFieldQtd.getText());
        } catch (NumberFormatException e) {
            jTextFieldQtd.selectAll();
            return;
        }
        // testando se a quantidade de dias setada faz sentido com a qtd de dias restantes de treino e
        // testando se a quantidade de dias setada é positiva
        if (AlgoritmoPrincipalTrainer.isDiasRestantesSetados()) {
            if (qtd > AlgoritmoPrincipalTrainer.getDiasRestantes() || qtd < 0) {
                JOptionPane.showMessageDialog(null, "A quantidade de dias de treino deve ser positiva e\n" +
                        "menor que a inicialmente definida", "Logic Error!", JOptionPane.ERROR_MESSAGE);
                
                jTextFieldQtd.selectAll();
                return;
            }
        }
        
        initTreino();
    }
    
    private void initTreino() {
        double qtd = Double.parseDouble(jTextFieldQtd.getText());
        
        // setando dias restantes
        jLabelDiasRestantes.setText(jTextFieldQtd.getText());
        AlgoritmoPrincipalTrainer.setSubDiasRestantes(qtd);
        
        // desabilitando campos
        jButtonQtdOk.setEnabled(false);
        jTextFieldQtd.setEnabled(false);
        
        // habilitando campos
        jButtonPerdeuODia.setEnabled(true);
        jButtonUpouBonus.setEnabled(true);
        jButtonUpouSubLvl.setEnabled(true);
        jButtonUpouSubLvlEBonus.setEnabled(true);
    }
    
    
    private void uparSubLvl() {
        Ficha ficha = AlgoritmoPrincipalTrainer.getFicha();
        String nome = AlgoritmoPrincipalTrainer.getNomeTreino();
        
        if (AlgoritmoPrincipalTrainer.getTreinar() == AlgoritmoPrincipalTrainer.getPER()) {
            ficha.getPer().get(nome).incrementaLvj();
            jLabelSubLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvj()));
            
            // se o lvl da jlabel for diferente do lvl da ficha, o personagem upou. logo...
            if (ficha.getPer().get(nome).getLvl() != Integer.parseInt(jLabelLvl.getText())) {
                // setando lvl, lvj (subLvl) e bonus
                jLabelLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvl()));
                // os codigo abaixo são equivalente a:
                // jLabelSubLvl.setText("0"); e jLabelBonus.setText("0");
                jLabelSubLvl.setText(String.valueOf(ficha.getPer().get(nome).getLvj()));
                jLabelBonus.setText(String.valueOf(ficha.getPer().get(nome).getBonus()));
                
                // mensagem de upgrade ao usuário
                JOptionPane.showMessageDialog(null, "Seu nível de perícia subiu!",
                        "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                
                // incrementando exp do up na ficha
                // CalculadoraUpper.putExpFicha retorna true se a ficha upar e false se não upar
                if (CalculadoraTrainer.putExpFicha(ficha.getPer().get(nome).getLvl() * 100, ficha)) {
                    // mensagem de upgrade ao usuário
                    JOptionPane.showMessageDialog(null, "Seu personagem subiu de nível!",
                            "Congratulations!", JOptionPane.INFORMATION_MESSAGE);

                    new View_distribuir(null, true).setVisible(true);
                }
                
                if (jCheckBoxAteUpar.isSelected()) {
                    // desabilitando jButtons
                    desabilitandoJButtons();
                }
            }
        } else { // AlgoritmoPrincipalUpper.getTreinar() == AlgoritmoPrincipalUpper.getPRO()
            ficha.getPro().get(nome).incrementaLvj();
            jLabelSubLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvj()));
            
            // se o lvl da jlabel for diferente do lvl da ficha, o personagem upou. logo...
            if (ficha.getPro().get(nome).getLvl() != Integer.parseInt(jLabelLvl.getText())) {
                // setando lvl, lvj (subLvl) e bonus
                jLabelLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvl()));
                // os codigo abaixo são equivalente a:
                // jLabelSubLvl.setText("0"); e jLabelBonus.setText("0");
                jLabelSubLvl.setText(String.valueOf(ficha.getPro().get(nome).getLvj()));
                jLabelBonus.setText(String.valueOf(ficha.getPro().get(nome).getBonus()));
                
                // atualizando atributos
                ficha.setVel();
                ficha.setEsq();
                ficha.setIni();
                ficha.setApr();
                ficha.setCrt();
                ficha.setHp();
                
                // mensagem de upgrade ao usuário
                JOptionPane.showMessageDialog(null, "Seu nível de proficiência subiu!",
                        "Congratulations!", JOptionPane.INFORMATION_MESSAGE);
                
                // incrementando exp do up na ficha
                // CalculadoraUpper.putExpFicha retorna true se a ficha upar e false se não upar
                if (CalculadoraTrainer.putExpFicha(ficha.getPro().get(nome).getLvl() * 100, ficha)) {
                    // mensagem de upgrade ao usuário
                    JOptionPane.showMessageDialog(null, "Seu personagem subiu de nível!",
                            "Congratulations!", JOptionPane.INFORMATION_MESSAGE);

                    new View_distribuir(null, true).setVisible(true);
                }
                
                if (jCheckBoxAteUpar.isSelected()) {
                    // desabilitando jButtons
                    desabilitandoJButtons();
                }
            }
        }
        
        // setar dado
        String dir = "/images/dados/";
        dir += String.valueOf(Integer.parseInt(jLabelSubLvl.getText()) + 1);
        dir += ".png";
        ImageIcon icone = criarImageIcon(dir, "null");
        jLabelDadoSubLvl.setIcon(icone);
        
        // se o bonus for maior que 7, não haverá mais treino
        // assim como se lvl for maior que 7, não haverá mais bonus
        if (Integer.parseInt(jLabelBonus.getText()) > 7 || Integer.parseInt(jLabelLvl.getText()) > 6) {
            jLabelDadoBonus.setIcon(null);
            return;
        }
        
        dir = "/images/dados/";
        dir += jLabelBonus.getText();
        dir += ".png";
        icone = criarImageIcon(dir, "null");
        jLabelDadoBonus.setIcon(icone);
        
        jLabelContador.setText("0");
    }
    
    
    public ImageIcon criarImageIcon(String caminho, String descricao) {
        java.net.URL imgURL = getClass().getResource(caminho);
        if (imgURL != null) {
            return new ImageIcon(imgURL, descricao);
        } else {
            System.err.println("Não foi possível carregar o arquivo de imagem: " + caminho);
            return null;
        }
    }
    
    private void uparBonus() {
        Ficha ficha = AlgoritmoPrincipalTrainer.getFicha();
        String nome = AlgoritmoPrincipalTrainer.getNomeTreino();
        
        
        if (AlgoritmoPrincipalTrainer.getTreinar() == AlgoritmoPrincipalTrainer.getPER()) {
            ficha.getPer().get(nome).incrementaBonus();
            jLabelBonus.setText(String.valueOf(ficha.getPer().get(nome).getBonus()));
        } else { // AlgoritmoPrincipalUpper.getTreinar() == AlgoritmoPrincipalUpper.getPRO()
            ficha.getPro().get(nome).incrementaBonus();
            jLabelBonus.setText(String.valueOf(ficha.getPro().get(nome).getBonus()));
        }
        
        // se o bonus for maior que 7, não haverá mais treino
        // assim como se lvl for maior que 7, não haverá mais bonus
        if (Integer.parseInt(jLabelBonus.getText()) > 7 || Integer.parseInt(jLabelLvl.getText()) > 6) {
            jLabelDadoBonus.setIcon(null);
            return;
        }
        // setar dado
        String dir = "/images/dados/";
        dir += jLabelBonus.getText() + ".png";
        ImageIcon icone = criarImageIcon(dir, "null");
        jLabelDadoBonus.setIcon(icone);
    }
    
    
    private void incrementaDiasPassados() {
        if (AlgoritmoPrincipalTrainer.getDiasIgnorados() == 0) {
            AlgoritmoPrincipalTrainer.getFicha().incrementaDia();
        }
        jLabelDiasPassados.setText(String.valueOf(Integer.parseInt(jLabelDiasPassados.getText()) + 1));
    }
    
    private void decrementaDiasRestantes() {
        if (AlgoritmoPrincipalTrainer.getDiasIgnorados() == 0) {
            if (AlgoritmoPrincipalTrainer.isDiasRestantesSetados()) {
                AlgoritmoPrincipalTrainer.decrementaDiasRestantes();
            }
            AlgoritmoPrincipalTrainer.incrementaDiasTreinados();
        }
        AlgoritmoPrincipalTrainer.decrementaSubDiasRestantes();
        jLabelDiasRestantes.setText(String.valueOf(AlgoritmoPrincipalTrainer.getSubDiasRestantes()));
    }
    
    private boolean acabaramOsSubDiasRestantes() {
        return AlgoritmoPrincipalTrainer.getSubDiasRestantes() == 0;
    }
    
    private void inserindoLinhaNaTabela() {
        // declarando variaveis
        DefaultTableModel dtm = (DefaultTableModel) jTable.getModel();
        int i = Integer.parseInt(jLabelDiasPassados.getText());
        int bonus = Integer.parseInt(jLabelBonus.getText());
        int subLvl = Integer.parseInt(jLabelSubLvl.getText());
        int lvl = Integer.parseInt(jLabelLvl.getText());
        Object[] vetor = {i, bonus, subLvl, lvl};
        
        // removendo e inserindo valores na linha indicada pela label dadosJogados
        if (i <= 90) {
            dtm.removeRow(i - 1);
        }
        dtm.insertRow(i - 1, vetor);
    }
    
    private void passarDia() {
        incrementaDiasPassados();
        decrementaDiasRestantes();
        
        if (acabaramOsSubDiasRestantes()) {
            JOptionPane.showMessageDialog(null, "Acabaram os dias de treino!",
                    "End Train!", JOptionPane.INFORMATION_MESSAGE);
            
            // se os dias de treino tiverem acabado, os jButtons são desativados
            desabilitandoJButtons();
        }
        
        inserindoLinhaNaTabela();
    }
    
    
    private void jButtonUpouSubLvlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpouSubLvlActionPerformed
        uparSubLvl();
        passarDia();
    }//GEN-LAST:event_jButtonUpouSubLvlActionPerformed

    private void jButtonUpouBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpouBonusActionPerformed
        uparBonus();
        passarDia();
    }//GEN-LAST:event_jButtonUpouBonusActionPerformed

    private void jTextFieldQtdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQtdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            setQtdTreinos();
        }
    }//GEN-LAST:event_jTextFieldQtdKeyPressed

    private void jButtonQtdOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQtdOkActionPerformed
        setQtdTreinos();
    }//GEN-LAST:event_jButtonQtdOkActionPerformed

    private void jButtonPerdeuODiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerdeuODiaActionPerformed
        passarDia();
    }//GEN-LAST:event_jButtonPerdeuODiaActionPerformed

    private void jButtonUpouSubLvlEBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpouSubLvlEBonusActionPerformed
        uparBonus();
        uparSubLvl();
        passarDia();
    }//GEN-LAST:event_jButtonUpouSubLvlEBonusActionPerformed

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        Treino treino = new Treino();
        Integer dias = Integer.parseInt(jLabelDiasPassados.getText());
        String nome = jLabelNome.getText();

        treino.setNome(nome);
        treino.setDias(dias);

        AlgoritmoPrincipalTrainer.putTreino(Treino.getI(), treino);

        this.dispose();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonDecrementaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecrementaActionPerformed
        int contador = Integer.parseInt(jLabelContador.getText());
        jLabelContador.setText(String.valueOf(--contador));
    }//GEN-LAST:event_jButtonDecrementaActionPerformed

    private void jButtonIncrementaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncrementaActionPerformed
        int contador = Integer.parseInt(jLabelContador.getText());
        jLabelContador.setText(String.valueOf(++contador));
    }//GEN-LAST:event_jButtonIncrementaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_treinoProEPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            View_treinoProEPer dialog = new View_treinoProEPer(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDecrementa;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonIncrementa;
    private javax.swing.JButton jButtonPerdeuODia;
    private javax.swing.JButton jButtonQtdOk;
    private javax.swing.JButton jButtonUpouBonus;
    private javax.swing.JButton jButtonUpouSubLvl;
    private javax.swing.JButton jButtonUpouSubLvlEBonus;
    private javax.swing.JCheckBox jCheckBoxAteUpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelBonus;
    private javax.swing.JLabel jLabelContador;
    private javax.swing.JLabel jLabelDadoBonus;
    private javax.swing.JLabel jLabelDadoSubLvl;
    private javax.swing.JLabel jLabelDiasPassados;
    private javax.swing.JLabel jLabelDiasRestantes;
    private javax.swing.JLabel jLabelLvl;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelSubLvl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextFieldQtd;
    // End of variables declaration//GEN-END:variables
}
